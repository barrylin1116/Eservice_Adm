<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twfhclife.adm.dao.JdDepartmentDao">
    <resultMap id="BaseResultMap" type="com.twfhclife.adm.model.DepartmentVo">
        <result column="DEP_ID" property="depId" />
        <result column="DEP_NAME" property="depName" />
        <result column="DESCRIPTION" property="description" />
        <result column="PARENT_DEP" property="parentDep" />
        <result column="CREATE_USER" property="createUser" />
        <result column="CREATE_DATE" property="createDate" />
        <result column="MODIFY_USER" property="modifyUser" />
        <result column="MODIFY_DATE" property="modifyDate" />
    </resultMap>

    <parameterMap id="DepartmentVo" type="com.twfhclife.adm.model.DepartmentVo"/>

    <sql id="Base_Column_List">
        DEP_ID,DEP_NAME,DESCRIPTION,PARENT_DEP,CREATE_USER,CREATE_DATE,MODIFY_USER,MODIFY_DATE
    </sql>

    <!-- 取得所有部門 -->
    <select id="getDepts_old" resultMap="BaseResultMap" parameterType="java.lang.String">
        WITH DEPARTMENT_AUTH AS (
        SELECT
        DEP_ID
        ,DEP_NAME
        ,DESCRIPTION
        ,PARENT_DEP
        ,BRANCH_ID
        FROM
        ESERVICE_JD.DBO.DEPARTMENT
        )
        ,ALL_DEPARTMENT_SORT (FUNCTION_LEVEL, DEP_ID, DEP_NAME, DESCRIPTION, PARENT_DEP) AS (
        SELECT
        CAST(1 				 AS VARCHAR) AS FUNCTION_LEVEL,
        CAST(b.DEP_ID	 AS VARCHAR),
        CAST(b.DEP_NAME	 AS VARCHAR),
        CAST(b.DESCRIPTION	 AS VARCHAR),
        CAST(b.PARENT_DEP	 AS VARCHAR)
        FROM DEPARTMENT_AUTH b
        WHERE b.PARENT_DEP IS NULL

        UNION ALL

        SELECT
        CAST(PARENT.FUNCTION_LEVEL + 1	  AS VARCHAR),
        CAST(CHILD.DEP_ID	 AS VARCHAR),
        CAST(CHILD.DEP_NAME	 AS VARCHAR),
        CAST(CHILD.DESCRIPTION	 AS VARCHAR),
        CAST(CHILD.PARENT_DEP	 AS VARCHAR)
        FROM DEPARTMENT_AUTH AS CHILD
        JOIN ALL_DEPARTMENT_SORT PARENT ON CHILD.PARENT_DEP = PARENT.DEP_ID
        )
        SELECT
        d.DEP_ID
        ,d.DEP_NAME
        ,d.DESCRIPTION
        ,d.PARENT_DEP
        FROM ALL_DEPARTMENT_SORT d
        ORDER BY DEP_ID
    </select>
    <!-- 取得所有部門 -->
    <select id="getDepts" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        d.DEP_ID
        ,d.DEP_NAME
        ,d.DESCRIPTION
        ,d.PARENT_DEP
        ,BRANCH_ID
        FROM
        ESERVICE_JD.DBO.DEPARTMENT d
        ORDER BY
        d.DEP_ID
    </select>

    <!-- 取得部門清單 -->
    <select id="getDeptList" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        DEP_ID
        ,DEP_NAME
        ,DESCRIPTION
        ,PARENT_DEP
        ,BRANCH_ID
        FROM
        ESERVICE_JD.DBO.DEPARTMENT
        WHERE
        PARENT_DEP IS NOT NULL
        <if test="vo.depId != null and vo.depId !=''">
            AND PARENT_DEP = #{vo.depId}
        </if>
        <if test="adminUserFlag == 'N'.toString()">
            AND DEP_ID IN (
            SELECT DEP_ID FROM ESERVICE_JD.DBO.USER_DEPARTMENT WHERE USER_ID = #{userId}
            )
        </if>
        ORDER BY
        DEP_ID
    </select>

    <!-- 新增部門節點 -->
    <insert id="addDepartment">
        INSERT
        INTO
        ESERVICE_JD.DBO.DEPARTMENT(
        DEP_ID
        ,DEP_NAME
        ,DESCRIPTION
        ,PARENT_DEP
        ,CREATE_USER
        ,CREATE_DATE
        ,MODIFY_USER
        ,MODIFY_DATE
        ,BRANCH_ID
        )
        VALUES
        (
        #{departmentVo.depId,jdbcType=VARCHAR}
        ,#{departmentVo.depName,jdbcType=VARCHAR}
        ,#{departmentVo.description,jdbcType=VARCHAR}
        ,#{departmentVo.parentDep,jdbcType=VARCHAR}
        ,#{departmentVo.createUser,jdbcType=VARCHAR}
        ,getdate()
        ,#{departmentVo.modifyUser,jdbcType=VARCHAR}
        ,getdate()
        ,#{departmentVo.branchId,jdbcType=VARCHAR}
        )
    </insert>

    <!-- 更新部門節點 -->
    <update id="updateDepartment">
        UPDATE
        ESERVICE_JD.DBO.DEPARTMENT
        SET
        DEP_NAME = #{departmentVo.depName,jdbcType=VARCHAR}
        ,DESCRIPTION = #{departmentVo.description,jdbcType=VARCHAR}
        ,PARENT_DEP = #{departmentVo.parentDep,jdbcType=VARCHAR}
        ,MODIFY_USER = #{departmentVo.modifyUser,jdbcType=VARCHAR}
        ,MODIFY_DATE = getdate()
        ,BRANCH_ID =  #{departmentVo.branchId,jdbcType=VARCHAR}
        WHERE
        DEP_ID = #{departmentVo.depId,jdbcType=VARCHAR}
    </update>

    <!-- 刪除部門節點 -->
    <delete id="deleteDepartment">
        DELETE FROM ESERVICE_JD.DBO.DEPARTMENT WHERE DEP_ID = #{depId}
    </delete>

    <select id="getDeptParentList" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        DEP_ID
        ,DEP_NAME
        ,DESCRIPTION
        ,PARENT_DEP
        ,BRANCH_ID
        FROM
        ESERVICE_JD.DBO.DEPARTMENT
        WHERE
        PARENT_DEP IS NOT NULL AND PARENT_DEP = '0'
      <!--  <if test="adminUserFlag == 'N'.toString()">
            AND DEP_ID IN (
            SELECT DEP_ID FROM ESERVICE_JD.DBO.USER_DEPARTMENT WHERE USER_ID = #{userId}
            )
        </if>-->
        ORDER BY
        DEP_ID
    </select>

    <select id="getNotifyDepts" resultType="hashmap">
        SELECT
          d.DEP_ID ,d.DEP_NAME, d1.DEP_NAME PASSAGE_WAY
        FROM
        ESERVICE_JD.DBO.DEPARTMENT d inner join ESERVICE_JD.DBO.DEPARTMENT d1 on d1.DEP_ID = d.PARENT_DEP
        WHERE d.PARENT_DEP = #{passageWay}
    </select>

    <select id="getPassageWay" resultType="hashmap">
        SELECT DEP_ID parameterValue , DEP_NAME parameterName FROM ESERVICE_JD.DBO.DEPARTMENT WHERE PARENT_DEP = '0'
    </select>

    <select id="getDepId" resultType="com.twfhclife.adm.model.DepartmentVo">
        SELECT
            d.*
        FROM
            ESERVICE_JD.DBO.DEPARTMENT d
      where d.DEP_ID = #{depId}
    </select>

    <select id="getBranchList" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        DEP_NAME,
        BRANCH_ID
        FROM
        ESERVICE_JD.DBO.DEPARTMENT
        WHERE
        PARENT_DEP IS NOT NULL
        <if test="vo.depId != null and vo.depId !=''">
            AND PARENT_DEP = #{vo.depId}
        </if>
        ORDER BY
        DEP_ID
    </select>

    <select id="getBranchId" resultType="com.twfhclife.adm.model.DepartmentVo">
        SELECT
           *
        FROM
            ESERVICE_JD.DBO.DEPARTMENT
        where PARENT_DEP = #{depId} and BRANCH_ID = #{branchId}
    </select>


    <select id="getDepLevel" resultType="int">
        SELECT COUNT(1) FROM ESERVICE_JD.dbo.DEPARTMENT WHERE PARENT_DEP != '0' AND DEP_ID = #{departmentVo.parentDep}
    </select>

    <select id="getDepBranch" resultType="int">
        select count(1) from ESERVICE_JD.dbo.DEPARTMENT where BRANCH_ID = #{departmentVo.branchId}
    </select>

    <select id="getDivDep" resultType="com.twfhclife.adm.model.DepartmentVo">
        select DEP_ID from ESERVICE_JD.dbo.DEPARTMENT where BRANCH_ID = #{branchId} and PARENT_DEP = #{parentDep}
    </select>
    
    <insert id="insertUserDep">
        insert ESERVICE_JD.dbo.USER_DEPARTMENT (USER_ID,DEP_ID,TITLE_ID,BRANCH_ID)values(#{userId},#{depId},#{titleId},#{branchId})
    </insert>

    <select id="countDepName" resultType="int">
        select count(DEP_NAME) from ESERVICE_JD.dbo.DEPARTMENT where DEP_NAME = #{depName} and PARENT_DEP = '0'
    </select>

    <select id="countBranchName" resultType="int">
        select count(DEP_NAME) from ESERVICE_JD.dbo.DEPARTMENT where  DEP_NAME = #{depName} and PARENT_DEP = #{parentDep}
    </select>

    <select id="countBranchId" resultType="int">
        select count(BRANCH_ID) from ESERVICE_JD.dbo.DEPARTMENT where BRANCH_ID = #{branchId}  and PARENT_DEP = #{parentDep}
    </select>

    <update id="updateUserDep">
        update ESERVICE_JD.dbo.USER_DEPARTMENT set DEP_ID = #{depId},BRANCH_ID = #{branchId} where USER_ID = #{userId}
    </update>

    <select id="countUserDep" resultType="int">
        select count(1) from ESERVICE_JD.dbo.USER_DEPARTMENT where BRANCH_ID = #{branchId} and DEP_ID =  #{depId}  and USER_ID = #{userId}
    </select>

    <select id="getBranchByList" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        DEP_NAME,
        BRANCH_ID
        FROM
        ESERVICE_JD.DBO.DEPARTMENT
        WHERE
        PARENT_DEP IS NOT NULL
        <if test="vo.depId != null and vo.depId !=''">
            AND PARENT_DEP = (select DEP_ID from ESERVICE_JD.dbo.DEPARTMENT where BRANCH_ID = #{vo.depId} AND PARENT_DEP = '0')
        </if>
        ORDER BY
        DEP_ID
    </select>
</mapper>