<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twfhclife.adm.dao.OnlineChangeDao">

	<resultMap id="TransExtendAttrMap" type="com.twfhclife.adm.model.TransExtendAttrVo" >
		<result column="ID" property="id"/>
		<result column="TRANS_NUM" property="transNum"/>
		<result column="ATTR_KEY" property="attrKey"/>
		<result column="ATTR_VALUE" property="attrValue"/>
	</resultMap>
	
	<resultMap id="transHIS" type="com.twfhclife.adm.model.TransStatusHistoryVo" >
		<result column="TS_ID" property="tsId"/>
		<result column="TRANS_NUM" property="transNum"/>
		<result column="USER_IDENTITY" property="identity"/>
		<result column="CUSTOMERNAME" property="customerName"/>
		<result column="REJECT_REASON" property="rejectReason"/>
		<result column="STATUS" property="status"/>
		<result column="CONTENT" property="content"/>
		<result column="REQUEST_DATE" property="requestDate"/>
	</resultMap>
	
	<resultMap id="transRFE" type="com.twfhclife.adm.model.TransRFEVo" >
		<result column="RFE_ID" property="rfeId"/>
		<result column="TRANS_NUM" property="transNum"/>
		<result column="FD_ID" property="fdID"/>
		<result column="STATUS" property="status"/>
		<result column="STATUS_NAME" property="statusName"/>
		<result column="REQUEST_CONTENT" property="requestContent"/>
		<result column="RESPONSE_CONTENT" property="responseContent"/>
		<result column="REQUEST_DATE" property="requestDate"/>
		<result column="RESPONSE_DATE" property="responseDate"/>
	</resultMap>
	
	<resultMap id="TransInsCliamFileDataResultMap" type="com.twfhclife.adm.model.TransInsuranceClaimFileDataVo">
		<result property="claimSeqId"   column="CLAIMS_SEQ_ID" />
		<result property="type"  column="TYPE" />
		<result property="fileName"    column="FILE_NAME" />
		<result property="filePath"  column="PATH" />
		<result property="fileBase64"  column="FILE_BASE64" />
	</resultMap>
	<resultMap id="medicalTreatmentClaimFileDataResultMap" type="com.twfhclife.adm.model.MedicalTreatmentClaimFileDataVo">
		<result property="claimSeqId"   column="CLAIMS_SEQ_ID" />
		<result property="type"  column="TYPE" />
		<result property="fileName"    column="FILE_NAME" />
		<result property="filePath"  column="PATH" />
		<result property="fileBase64"  column="FILE_BASE64" />
	</resultMap>

	<resultMap id="hospitalResultMap" type="com.twfhclife.adm.model.Hospital">
		<result property="id" column="ID" />
		<result property="hpid"  column="HP_ID" />
		<result property="hpName"    column="HP_NAME" />
		<result property="functionName"  column="FUNCTION_NAME" />
		<collection property="hpBranch" resultMap="SubHospitalResultMap"></collection>
	</resultMap>

	<resultMap id="SubHospitalResultMap" type="com.twfhclife.adm.model.SubHospital">
		<result property="id" column="SUB_ID"/>
		<result property="subHpId" column="SUB_HP_ID"/>
		<result property="subHpName" column="SUB_HP_NAME"/>
	</resultMap>

<resultMap id="hospitalInsuranceCompanyResultMap" type="com.twfhclife.adm.model.HospitalInsuranceCompany">
		<result property="id" column="ID" />
		<result property="insuranceId"  column="INSURANCE_ID" />
		<result property="insuranceName"    column="INSURANCE_NAME" />
		<result property="functionName"  column="FUNCTION_NAME" />
	</resultMap>

<resultMap id="transFundConversionMap" type="com.twfhclife.adm.model.TransFundConversionVo">
		<result property="invtNo"   column="INVT_NO" />
		<result property="invtName"  column="INVT_NAME" />
		<result property="investmentType"    column="INVESTMENT_TYPE" />
		<result property="ratio"  column="RATIO" />
		<result property="value"  column="VALUE" />
	</resultMap>
	<resultMap id="transFundConversion" type="com.twfhclife.adm.model.TransFundConversionVo">
		<result property="invtNo"   column="INVT_NO" />
		<result property="invtName"  column="INVT_NAME" />
		<result property="fundName"  column="FUND_NAME" />
		<result property="investmentType"    column="INVESTMENT_TYPE" />
		<result property="ratio"  column="RATIO" />
		<result property="value"  column="VALUE" />

		<result column="SWIFT_CODE" property="swiftCode" jdbcType="NVARCHAR" />
		<result column="ENGLISH_NAME" property="englishName" jdbcType="NVARCHAR" />
		<result column="BANK_CODE" property="bankCode" jdbcType="NVARCHAR" />
		<result column="BRANCH_CODE" property="branchCode" jdbcType="NVARCHAR" />
		<result column="ACCOUNT_NAME" property="accountName" jdbcType="NVARCHAR" />
		<result column="BANK_ACCOUNT" property="bankAccount" jdbcType="NVARCHAR" />
		<result column="BANK_NAME" property="bankName" jdbcType="NVARCHAR" />
		<result column="BRANCH_NAME" property="branchName" jdbcType="NVARCHAR" />

	</resultMap>
	
	<sql id="TRANS_DNS_ALL">
		A.SEQ_ID
		,A.NOTIFY_SEQ_ID
		,A.TRANS_NUM
		,A.TYPE
		,A.JOB_ID
		,A.CASE_ID
		,ESERVICE.DBO.FN_DEBASE64(A.IDNO) IDNO
		,A.INSNOM
		,ESERVICE.DBO.FN_DEBASE64(A.NAME) NAME
		,ESERVICE.DBO.FN_DEBASE64(A.BIRDATE) BIRDATE
		,A.SEX
		,A.CON
		,A.CONDATE
		,A.ADDDATE
		,A.SEND_ALLIANCE
		,A.CREATE_DATE
		,A.CODE
		,A.MSG
		,A.UPDATENUMBER
		,A.UPDATE_CODE_DATE
	</sql>
	<sql id="Trans_Column_List">
		TRANS_NUM, TRANS_DATE, TRANS_TYPE, POLICY_NO, USER_ID, STATUS, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE
	</sql>
	<sql id="Trans_Sex_Con_List">
	     CASE SEX WHEN '1' THEN '男' WHEN '2' THEN '女'  ELSE '其他' END  SEX_NAME, 
		 CASE CON WHEN '30' THEN '被保險人因自然死身故' WHEN '31' THEN '被保險人因意外身故'   WHEN '32' THEN '被保險人因其他原因身故'  ELSE '' END  CON_NAME
	</sql>
	<sql id="TRANS_INSURANCE_CLAIM_ALL">
		A.CLAIMS_SEQ_ID
		,A.CASE_ID
		,A.TRANS_NUM
		,A.FILE_RECEIVED
		,A.APPLYITEM
		,A.POLICYNO
		,ESERVICE.DBO.FN_DEBASE64(CUSTOMERNAME)  CUSTOMERNAME
		,ESERVICE.DBO.FN_DEBASE64(NAME)  NAME
		,A.RELATION
		,ESERVICE.DBO.FN_DEBASE64(ID_NO)  ID_NO
		,ESERVICE.DBO.FN_DEBASE64(BIRDATE)  BIRDATE
		,ESERVICE.DBO.FN_DEBASE64(TEL) TEL
		,ESERVICE.DBO.FN_DEBASE64(PHONE) PHONE
		,A.ZIP_CODE
		,ESERVICE.DBO.FN_DEBASE64(ADDRESS) ADDRESS
		,ESERVICE.DBO.FN_DEBASE64(MAIL) MAIL
		,A.DISEASENAME
		,A.DIAGNOSISDATE
		,A.HOSPITAL
		,A.OTHERCOMPANYINSURED
		,A.OTHERINSUCOMMPANY
		,A.OTHERINSUTYPE
		,A.OTHERINSUAMOUNT
		,A.OTHERINSUCLAIM
		,A.PAYMENT_METHOD
		,A.BANK_CODE
		,A.BRANCH_CODE
		,ESERVICE.DBO.FN_DEBASE64(BANK_ACCOUNT) BANK_ACCOUNT
		,A.ACCOUNTNAME
		,A.APPLICATION_DATE
		,A.APPLICATION_TIME
		,A.APPLICATION_ITEM
		,A.JOB
		,A.JOB_DESCR
		,A.ACCIDENT_DATE
		,A.ACCIDENT_TIME
		,A.ACCIDENT_CAUSE
		,A.ACCIDENT_LOCATION
		,A.ACCIDENT_DESCR
		,A.POLICE_STATION
		,ESERVICE.DBO.FN_DEBASE64(POLICE_NAME) POLICE_NAME
		,ESERVICE.DBO.FN_DEBASE64(POLICE_PHONE) POLICE_PHONE
		,A.POLICE_DATE
		,A.POLICE_TIME
		,A.CALLPOLICE
		,A.FROM_COMPANY_ID
		,A.TO_COMPANY_ID
		,A.SEND_ALLIANCE
		,A.CREATE_DATE,
		A.SIGN_AGREE
	</sql>
	<!--保單醫療-->
	<sql id="MEDICAL_TREATMENT_CLAIM_ALL">
		A.CLAIMS_SEQ_ID
		,A.CASE_ID
		,A.TRANS_NUM
		,A.FILE_RECEIVED
		,A.APPLYITEM
		,A.POLICYNO
		,ESERVICE.DBO.FN_DEBASE64(CUSTOMERNAME)  CUSTOMERNAME
		,ESERVICE.DBO.FN_DEBASE64(NAME)  NAME
		,A.RELATION
		,ESERVICE.DBO.FN_DEBASE64(ID_NO)  ID_NO
		,ESERVICE.DBO.FN_DEBASE64(BIRDATE)  BIRDATE
		,ESERVICE.DBO.FN_DEBASE64(TEL) TEL
		,ESERVICE.DBO.FN_DEBASE64(PHONE) PHONE
		,A.ZIP_CODE
		,ESERVICE.DBO.FN_DEBASE64(ADDRESS) ADDRESS
		,ESERVICE.DBO.FN_DEBASE64(MAIL) MAIL
		,A.DISEASENAME
		,A.DIAGNOSISDATE
		,A.HOSPITAL
		,A.OTHERCOMPANYINSURED
		,A.OTHERINSUCOMMPANY
		,A.OTHERINSUTYPE
		,A.OTHERINSUAMOUNT
		,A.OTHERINSUCLAIM
		,A.PAYMENT_METHOD
		,A.BANK_CODE
		,A.BRANCH_CODE
		,ESERVICE.DBO.FN_DEBASE64(BANK_ACCOUNT) BANK_ACCOUNT
		,A.ACCOUNTNAME
		,A.APPLICATION_DATE
		,A.APPLICATION_TIME
		,A.APPLICATION_ITEM
		,A.JOB
		,A.JOB_DESCR
		,A.ACCIDENT_DATE
		,A.ACCIDENT_TIME
		,A.ACCIDENT_CAUSE
		,A.ACCIDENT_LOCATION
		,A.ACCIDENT_DESCR
		,A.POLICE_STATION
		,ESERVICE.DBO.FN_DEBASE64(POLICE_NAME) POLICE_NAME
		,ESERVICE.DBO.FN_DEBASE64(POLICE_PHONE) POLICE_PHONE
		,A.POLICE_DATE
		,A.POLICE_TIME
		,A.CALLPOLICE
		,A.FROM_COMPANY_ID
		,A.TO_COMPANY_ID
		,A.SEND_ALLIANCE
		,A.CREATE_DATE
		,A.AUTHORIZATION_FILE_TYPE
		,A.AUTHORIZATION_START_DATE
		,A.AUTHORIZATION_END_DATE
		,A.FROM_HOSPITAL_ID
		,A.TO_HOSPITAL_ID
		,A.ALLIANCE_STATUS
		,A.HP_UID
		,A.CPOA
	</sql>
	<!-- include sql: 取得線上申請 -->
	<sql id="INC1">
		SELECT 
			T.TRANS_NUM
			,T.TRANS_DATE
			,T.TRANS_TYPE
			<!-- TODO 需要加入系統條件 -->
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = T.TRANS_TYPE
			), ' ') AS TRANS_TYPE_NAME
			,T.STATUS
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_STATUS_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = T.STATUS
			), ' ') AS STATUS_NAME
			,T.CREATE_DATE
			,U.ROC_ID
			,F.FROM_COMPANY_ID
		FROM
			ESERVICE.DBO.TRANS T
			LEFT JOIN ESERVICE.DBO.USERS U ON T.USER_ID = U.USER_ID
			LEFT JOIN ESERVICE.DBO.TRANS_INSURANCE_CLAIM F ON T.TRANS_NUM = F.TRANS_NUM
		WHERE
			convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
			AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
			<if test="transVo.transType != null and transVo.transType != ''" >
				AND T.TRANS_TYPE = #{transVo.transType}	
			</if>
			<if test="transVo.policyNo != null and transVo.policyNo != ''" >
				<!-- 一筆序號可能會對應多筆保單號碼，join TRANS_POLICY 會造成序號資料會多筆顯示，所以查詢保單號碼需要單獨判斷 -->
				AND (
					SELECT 
						COUNT(1) 
					FROM ESERVICE.DBO.TRANS_POLICY TP 
					WHERE 
						TP.TRANS_NUM = T.TRANS_NUM 
						AND TP.POLICY_NO = #{transVo.policyNo}) <![CDATA[>=]]> 1
			</if>
			<if test="transVo.status != null and transVo.status != ''" >
				AND T.STATUS = #{transVo.status}	
			</if>
			<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
				AND U.ROC_ID = #{transVo.policyHolderId}	
			</if>
	<if test="transVo.dataScope == '01'" >
				AND F.FROM_COMPANY_ID = 'L01'
			</if>
			<if test="transVo.dataScope == '02'" >
				AND F.FROM_COMPANY_ID != 'L01'
			</if>
			<if test="transVo.fileReceived != null and transVo.fileReceived != ''" >
				AND F.FILE_RECEIVED = #{transVo.fileReceived}	
			</if>
			<if test="transVo.to != null and transVo.to != ''" >
				AND F.TO_COMPANY_ID is not null
			</if>
			<if test="transVo.sendToAlliance != null and transVo.sendToAlliance != ''" >
				AND F.SEND_ALLIANCE = #{transVo.sendToAlliance}	
			</if>
			<if test="transVo.signAgree != null and transVo.signAgree != ''" >
				AND F.SIGN_AGREE  = #{transVo.signAgree}
			</if>
	</sql>
	
	<!-- include sql: 線上申請明細查詢共用欄位 -->
	<sql id="INC2">
		#{transVo.policyNo} AS SHOW_POLICY_NO
		,replace(convert(varchar, T.TRANS_DATE, 120), '-', '/') AS TRANS_DATE
		,T.TRANS_TYPE
		<!-- TODO 需要加入系統條件 -->
		,COALESCE((
			SELECT
				a.PARAMETER_NAME
			FROM
				ESERVICE_ADM.DBO.PARAMETER a
				,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
			WHERE
				a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
				AND a.STATUS = b.STATUS
				AND b.STATUS = 1
				AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_PARAMETER_CATEGORY_CODE"/>
				AND a.PARAMETER_CODE = T.TRANS_TYPE
		), ' ') AS TRANS_TYPE_NAME
		,T.STATUS AS STATUS_TYPE
		,COALESCE((
			SELECT
				a.PARAMETER_NAME
			FROM
				ESERVICE_ADM.DBO.PARAMETER a
				,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
			WHERE
				a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
				AND a.STATUS = b.STATUS
				AND b.STATUS = 1
				AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_STATUS_PARAMETER_CATEGORY_CODE"/>
				AND a.PARAMETER_CODE = T.STATUS
		), ' ') AS STATUS_NAME
	</sql>
	
	<!-- include sql: 變更保單聯絡資料 -->
	<sql id="INC3">
		SELECT 
			T.TRANS_NUM
			,T.TRANS_DATE
			,T.TRANS_TYPE
			<!-- TODO 需要加入系統條件 -->
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = T.TRANS_TYPE
			), ' ') AS TRANS_TYPE_NAME
			,T.STATUS
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_STATUS_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = T.STATUS
			), ' ') AS STATUS_NAME
			,T.CREATE_DATE
			,U.ROC_ID
			,D.FROM_COMPANY_ID
		FROM
			ESERVICE.DBO.TRANS T
			LEFT JOIN ESERVICE.DBO.USERS U ON T.USER_ID = U.USER_ID
			LEFT JOIN ESERVICE.DBO.TRANS_CONTACT_INFO F ON T.TRANS_NUM = F.TRANS_NUM
			lEFT JOIN ESERVICE.DBO.TRANS_CONTACT_INFO_DTL D ON F.ID = D.TRANS_CONTACT_ID
		WHERE
			convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
			AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
			<if test="transVo.transType != null and transVo.transType != ''" >
				AND T.TRANS_TYPE = #{transVo.transType}	
			</if>
			<if test="transVo.policyNo != null and transVo.policyNo != ''" >
				<!-- 一筆序號可能會對應多筆保單號碼，join TRANS_POLICY 會造成序號資料會多筆顯示，所以查詢保單號碼需要單獨判斷 -->
				AND (
					SELECT 
						COUNT(1) 
					FROM ESERVICE.DBO.TRANS_POLICY TP 
					WHERE 
						TP.TRANS_NUM = T.TRANS_NUM 
						AND TP.POLICY_NO = #{transVo.policyNo}) <![CDATA[>=]]> 1
			</if>
			<if test="transVo.status != null and transVo.status != ''" >
				AND T.STATUS = #{transVo.status}	
			</if>
			<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
				AND U.ROC_ID = #{transVo.policyHolderId}	
			</if>
			<if test="transVo.dataScope == '01'" >
				AND D.FROM_COMPANY_ID = 'L01'
			</if>
			<if test="transVo.dataScope == '02'" >
				AND D.FROM_COMPANY_ID != 'L01'
			</if>
			<if test="transVo.to != null and transVo.to != ''" >
				AND D.TO_COMPANY_ID is not null
			</if>
			<if test="transVo.sendToAlliance != null and transVo.sendToAlliance != ''" >
				AND D.SEND_ALLIANCE = #{transVo.sendToAlliance}	
			</if>
			<if test="transVo.fromCompanyId =='01'">
				and  D.FROM_COMPANY_ID = 'L01'
			</if>
			<if test="transVo.fromCompanyId =='02'">
				and  D.FROM_COMPANY_ID != 'L01'
			</if>
	</sql>
	
	<!-- include sql: 死亡除戶 -->
	<sql id="INC4">
		SELECT 
			T.TRANS_NUM
			,T.TRANS_DATE
			,T.TRANS_TYPE
			<!-- TODO 需要加入系統條件 -->
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = T.TRANS_TYPE
			), ' ') AS TRANS_TYPE_NAME
			,T.STATUS
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_STATUS_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = T.STATUS
			), ' ') AS STATUS_NAME
			,T.CREATE_DATE
			,ESERVICE.DBO.FN_DEBASE64(F.IDNO) as ROC_ID
			,F.INSNOM as POLICY_NO
		FROM
			ESERVICE.DBO.TRANS T
			LEFT JOIN ESERVICE.DBO.TRANS_DNS F ON T.TRANS_NUM = F.TRANS_NUM
		WHERE
			convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
			AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
			<if test="transVo.transType != null and transVo.transType != ''" >
				AND T.TRANS_TYPE = #{transVo.transType}	
			</if>
			<if test="transVo.policyNo != null and transVo.policyNo != ''" >
				AND F.INSNOM = #{transVo.policyNo}	
			</if>
			<if test="transVo.status != null and transVo.status != ''" >
				AND T.STATUS = #{transVo.status}	
			</if>
			<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
				AND F.IDNO = ESERVICE.DBO.FN_ENBASE64(#{transVo.policyHolderId})
			</if>
			<if test="transVo.code == null and transVo.code == ''" >
				AND F.CODE is null
			</if>
			<if test="transVo.code != null and transVo.code != ''" >
				AND F.CODE = #{transVo.code}	
			</if>
			<if test="transVo.dnsCode != null and transVo.dnsCode != ''">
				AND F.FSZ1_PI_ST = #{transVo.dnsCode}
			</if>
	</sql>
	
<!-- include sql: 醫療 -->
	<sql id="MEDICAL01">
		SELECT
		T.TRANS_NUM
		,T.TRANS_DATE
		,T.TRANS_TYPE
		,COALESCE((
		SELECT
		a.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
		WHERE
		a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
		AND a.STATUS = b.STATUS
		AND b.STATUS = 1
		AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_PARAMETER_CATEGORY_CODE"/>
		AND a.PARAMETER_CODE = T.TRANS_TYPE
		), ' ') AS TRANS_TYPE_NAME
		,T.STATUS
		,COALESCE((
		SELECT
		a.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
		WHERE
		a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
		AND a.STATUS = b.STATUS
		AND b.STATUS = 1
		AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_STATUS_PARAMETER_CATEGORY_CODE"/>
		AND a.PARAMETER_CODE = T.STATUS
		), ' ') AS STATUS_NAME
		,T.CREATE_DATE
		,U.ROC_ID
		,F.FROM_COMPANY_ID
		FROM
		ESERVICE.DBO.TRANS T
		LEFT JOIN ESERVICE.DBO.USERS U ON T.USER_ID = U.USER_ID
		LEFT JOIN ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM F ON T.TRANS_NUM = F.TRANS_NUM
		inner join
		(select temp.*
		from (
		SELECT *,Row_Number() OVER (partition by TRANS_NUM ORDER BY REQUEST_DATE desc) as rank FROM ESERVICE.DBO.TRANS_STATUS_HISTORY   where 1=1
		) temp
		where rank = 1
		)   TH  ON F.TRANS_NUM = TH.TRANS_NUM
		WHERE
		convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
		AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
		<if test="transVo.transType != null and transVo.transType != ''" >
			AND T.TRANS_TYPE = #{transVo.transType}
		</if>
		<if test="transVo.policyNo != null and transVo.policyNo != ''" >
			<!-- 一筆序號可能會對應多筆保單號碼，join TRANS_POLICY 會造成序號資料會多筆顯示，所以查詢保單號碼需要單獨判斷 -->
				AND (
				SELECT
				COUNT(1)
				FROM ESERVICE.DBO.TRANS_POLICY TP
				WHERE
				TP.TRANS_NUM = T.TRANS_NUM
				AND TP.POLICY_NO = #{transVo.policyNo}) <![CDATA[>=]]> 1
		</if>
		<if test="transVo.status != null and transVo.status != ''" >
			AND T.STATUS = #{transVo.status}
		</if>
		<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
			AND U.ROC_ID = #{transVo.policyHolderId}
		</if>
		<if test="transVo.dataScope == '01'" >
			AND F.FROM_COMPANY_ID = 'L01'
		</if>
		<if test="transVo.dataScope == '02'" >
			AND F.FROM_COMPANY_ID != 'L01'
		</if>
		<if test="transVo.fileReceived != null and transVo.fileReceived != ''" >
			AND F.FILE_RECEIVED = #{transVo.fileReceived}
		</if>
		<if test="transVo.to != null and transVo.to != ''" >
			AND F.TO_COMPANY_ID is not null
		</if>
		<if test="transVo.sendToAlliance != null and transVo.sendToAlliance != ''" >
			AND F.SEND_ALLIANCE = #{transVo.sendToAlliance}
		</if>
		<if test="transVo.sendToHospitalIdItem != null and transVo.sendToHospitalIdItem != ''" >
			AND F.SEND_ALLIANCE = #{transVo.sendToHospitalIdItem}
		</if>
		<if test="transVo.medicalCaseStatus != null and transVo.medicalCaseStatus != ''" >
			AND F.ALLIANCE_STATUS = #{transVo.medicalCaseStatus}
		</if>
		<if test="transVo.abnormalReason != null and transVo.abnormalReason != ''" >
			AND TH.REJECT_REASON  = #{transVo.abnormalReason}
		</if>
		<if test="transVo.fromHospitalId != null and transVo.fromHospitalId != ''" >
			AND  F.CLAIMS_SEQ_ID  IN  (
			select  distinct  CLAIMS_SEQ_ID  FROM  ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS FD  WHERE  FD.FILE_STATUS  = #{transVo.fromHospitalId}
			)
		</if>
		<if test="transVo.signAgree != null and transVo.signAgree != ''" >
			AND F.SIGN_AGREE  = #{transVo.signAgree}
		</if>
	</sql>
	<!-- include sql: 取得醫療線上申請 -->
	<sql id="MEDICAL02">
		SELECT
		T.TRANS_NUM
		,T.TRANS_DATE
		,T.TRANS_TYPE
		,COALESCE((
		SELECT
		a.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
		WHERE
		a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
		AND a.STATUS = b.STATUS
		AND b.STATUS = 1
		AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_PARAMETER_CATEGORY_CODE"/>
		AND a.PARAMETER_CODE = T.TRANS_TYPE
		), ' ') AS TRANS_TYPE_NAME
		,T.STATUS
		,COALESCE((
		SELECT
		a.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
		WHERE
		a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
		AND a.STATUS = b.STATUS
		AND b.STATUS = 1
		AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.ONLINE_CHANGE_STATUS_PARAMETER_CATEGORY_CODE"/>
		AND a.PARAMETER_CODE = T.STATUS
		), ' ') AS STATUS_NAME
		,T.CREATE_DATE
		,U.ROC_ID
		,F.FROM_COMPANY_ID
		FROM
		ESERVICE.DBO.TRANS T
		LEFT JOIN ESERVICE.DBO.USERS U ON T.USER_ID = U.USER_ID
		LEFT JOIN ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM F ON T.TRANS_NUM = F.TRANS_NUM
		inner join
		(select temp.*
		from (
		SELECT *,Row_Number() OVER (partition by TRANS_NUM ORDER BY REQUEST_DATE desc) as rank FROM ESERVICE.DBO.TRANS_STATUS_HISTORY   where 1=1
		) temp
		where rank = 1
		)   TH  ON F.TRANS_NUM = TH.TRANS_NUM
		WHERE
		convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
		AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
		<if test="transVo.transType != null and transVo.transType != ''" >
			AND T.TRANS_TYPE = #{transVo.transType}
		</if>
		<if test="transVo.policyNo != null and transVo.policyNo != ''" >
			<!-- 一筆序號可能會對應多筆保單號碼，join TRANS_POLICY 會造成序號資料會多筆顯示，所以查詢保單號碼需要單獨判斷 -->
			AND (
			SELECT
			COUNT(1)
			FROM ESERVICE.DBO.TRANS_POLICY TP
			WHERE
			TP.TRANS_NUM = T.TRANS_NUM
			AND TP.POLICY_NO = #{transVo.policyNo}) <![CDATA[>=]]> 1
		</if>
		<if test="transVo.status != null and transVo.status != ''" >
			AND T.STATUS = #{transVo.status}
		</if>
		<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
			AND U.ROC_ID = #{transVo.policyHolderId}
		</if>
		<if test="transVo.dataScope == '01'" >
			AND F.FROM_COMPANY_ID = 'L01'
		</if>
		<if test="transVo.dataScope == '02'" >
			AND F.FROM_COMPANY_ID != 'L01'
		</if>
		<if test="transVo.fileReceived != null and transVo.fileReceived != ''" >
			AND F.FILE_RECEIVED = #{transVo.fileReceived}
		</if>
		<if test="transVo.to != null and transVo.to != ''" >
			AND F.TO_COMPANY_ID is not null
		</if>
		<if test="transVo.sendToAlliance != null and transVo.sendToAlliance != ''" >
			AND F.SEND_ALLIANCE = #{transVo.sendToAlliance}
		</if>

		<if test="transVo.sendToHospitalIdItem != null and transVo.sendToHospitalIdItem != ''" >
			AND F.SEND_ALLIANCE = #{transVo.sendToHospitalIdItem}
		</if>
		<if test="transVo.medicalCaseStatus != null and transVo.medicalCaseStatus != ''" >
			AND F.ALLIANCE_STATUS = #{transVo.medicalCaseStatus}
		</if>
		<if test="transVo.abnormalReason != null and transVo.abnormalReason != ''" >
			AND TH.REJECT_REASON  = #{transVo.abnormalReason}
		</if>
		<if test="transVo.fromHospitalId != null and transVo.fromHospitalId != ''" >
			AND  F.CLAIMS_SEQ_ID  IN  (
			select  distinct  CLAIMS_SEQ_ID  FROM  ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS FD  WHERE  FD.FILE_STATUS   = #{transVo.fromHospitalId}
			)
		</if>
		<if test="transVo.signAgree != null and transVo.signAgree != ''" >
			AND F.SIGN_AGREE  = #{transVo.signAgree}
		</if>

	</sql>

	<!-- 取得線上申請查詢結果(分頁) -->
	<select id="getOnlineChangeDetailForPageable" resultType="hashmap">
		SELECT
			*
		FROM (
			SELECT
				ROW_NUMBER() OVER (ORDER BY CREATE_DATE) AS ROW_NUM
				,A.*
			FROM (
				<include refid="optimizeINC1" />
			) A
		) B		
		WHERE
			B.ROW_NUM <![CDATA[<=]]> (#{transVo.start} + #{transVo.length})
			AND B.ROW_NUM <![CDATA[>]]> #{transVo.start}
	</select>
	
	<!-- 取得線上申請查詢結果(分頁) -->
	<select id="getOnlineChangeDetail" resultType="hashmap">
		<include refid="INC1" />
	</select>
	
	<!-- 取得線上申請查詢結果(總筆數) -->
	<select id="getOnlineChangeDetailTotal" resultType="int">
		SELECT
			COUNT(1) AS AMOUNT
		FROM (
			<include refid="INC1" />
		) t
	</select>
	
	<!-- 取得變更保單聯絡資料查詢結果(分頁) -->
	<select id="getOnlineChangeCIDetail" resultType="hashmap">
		SELECT
			*
		FROM (
			SELECT
				ROW_NUMBER() OVER (ORDER BY CREATE_DATE) AS ROW_NUM
				,A.*
			FROM (
				<include refid="INC3" />
			) A
		) B		
		WHERE
			B.ROW_NUM <![CDATA[<=]]> (#{transVo.start} + #{transVo.length})
			AND B.ROW_NUM <![CDATA[>]]> #{transVo.start}
	</select>
	
	<!-- 取得變更保單聯絡資料查詢結果(總筆數) -->
	<select id="getOnlineChangeCIODetailTotal" resultType="int">
		SELECT
			COUNT(1) AS AMOUNT
		FROM (
			<include refid="INC3" />
		) t
	</select>
	
	<!-- 取得死亡除戶資料查詢結果(分頁) -->
	<select id="getOnlineChangeDnsDetail" resultType="hashmap">
		SELECT
			*
		FROM (
			SELECT
				ROW_NUMBER() OVER (ORDER BY CREATE_DATE) AS ROW_NUM
				,A.*
			FROM (
				<include refid="INC4" />
			) A
		) B		
		WHERE
			B.ROW_NUM <![CDATA[<=]]> (#{transVo.start} + #{transVo.length})
			AND B.ROW_NUM <![CDATA[>]]> #{transVo.start}
	</select>
	
	<!-- 取得死亡除戶查詢結果(總筆數) -->
	<select id="getOnlineChangeDnsDetailTotal" resultType="int">
		SELECT
			COUNT(1) AS AMOUNT
		FROM (
			<include refid="INC4" />
		) t
	</select>
	
	<select id="getDNS_CSV" resultType="hashmap">
		SELECT 
			T.TRANS_NUM ,
			T.TRANS_DATE ,
			T.TRANS_TYPE ,
			COALESCE(( SELECT a.PARAMETER_NAME FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS AND b.STATUS = 1  AND b.CATEGORY_CODE = 'ONLINE_CHANGE' AND a.PARAMETER_CODE = T.TRANS_TYPE ), ' ') AS TRANS_TYPE_NAME ,
			COALESCE(( SELECT a.PARAMETER_NAME FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS AND b.STATUS = 1 AND b.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS' AND a.PARAMETER_CODE = T.STATUS ), ' ') AS STATUS_NAME ,
			T.CREATE_DATE ,
		ESERVICE.DBO.FN_DEBASE64(F.NAME),
		ESERVICE.DBO.FN_DEBASE64(F.IDNO),
		ESERVICE.DBO.FN_DEBASE64(F.NAME),
		ESERVICE.DBO.FN_DEBASE64(F.BIRDATE),
			F.INSNOM,F.SEX,F.CON,
			F.CONDATE,F.ADDDATE,
			<include refid="Trans_Sex_Con_List" />
		FROM ESERVICE.DBO.TRANS T 
		    JOIN ESERVICE.DBO.TRANS_DNS F ON T.TRANS_NUM = F.TRANS_NUM
		WHERE convert(varchar(10), T.CREATE_DATE, 120)  <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
		 AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
		 <if test="transVo.transType != null and transVo.transType != ''" >
			AND T.TRANS_TYPE = #{transVo.transType}	
		</if>
		<if test="transVo.status != null and transVo.status != ''" >
			AND T.STATUS = #{transVo.status}	
		</if>
		<if test="transVo.transNum != null and transVo.transNum != ''" >
		 	AND T.TRANS_NUM = #{transVo.transNum}	
		</if>
		<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
		 AND F.IDNO = ESERVICE.DBO.FN_ENBASE64(#{transVo.policyHolderId})
		</if>
	</select>
	
	<!-- 取得變更保單聯絡資料查詢結果(總筆數) -->
	<select id="getOnlineChangeCIDetailTotal" resultType="int">
		SELECT
			COUNT(1) AS AMOUNT
		FROM (
			<include refid="INC3" />
		) t
	</select>
	
	<!-- 取得交易序號對應的保單號碼 -->
	<select id="getTransPolicyNoList" resultType="string">
		SELECT POLICY_NO FROM ESERVICE.DBO.TRANS_POLICY WHERE TRANS_NUM = #{transNum}
	</select>
	
	<!-- 取得線上申請資料-繳別 -->
	<select id="getTransPaymode" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM
			ESERVICE.DBO.TRANS_PAYMODE A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
			LEFT JOIN ESERVICE.DBO.TRANS_POLICY TP ON T.TRANS_NUM = TP.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請-保單理賠 -->
	<select id="getTransInsuranceClaim" resultType="hashmap">
		SELECT TOP 1
			<include refid="TRANS_INSURANCE_CLAIM_ALL"></include>
			,COALESCE((SELECT
						a1.PARAMETER_NAME
					FROM
						ESERVICE_ADM.DBO.PARAMETER a1
						,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
					WHERE
						a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
						AND a1.STATUS = b1.STATUS
						AND b1.STATUS = 1
						AND b1.CATEGORY_CODE = 'RELATION_ITEMS'
						AND a1.PARAMETER_VALUE =  A.RELATION), ' ')  AS RELATION_NAME
			,COALESCE((SELECT
							BANK_NAME
						FROM
							ESERVICE.DBO.BANK_INFO
						WHERE BRANCH_ID = 'root'
						AND DISPLAY = 'Y'
						AND BANK_ID = A.BANK_CODE), ' ')  AS BANK_NAME
	        ,COALESCE((SELECT
							BRANCH_NAME
						FROM
							ESERVICE.DBO.BANK_INFO
						WHERE BRANCH_ID != 'root'
						  AND BANK_ID = A.BANK_CODE
						  AND BRANCH_ID = A.BRANCH_CODE
						), ' ')  AS BRANCH_NAME
			,<include refid="INC2" />
		FROM
			ESERVICE.dbo.TRANS_INSURANCE_CLAIM A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
<!-- 取得線上申請-保單醫療 -->
	<select id="getMedicalTreatmentClaim" resultType="hashmap">
		SELECT TOP 1
		<include refid="MEDICAL_TREATMENT_CLAIM_ALL"></include>, A.SIGN_AGREE, A.TO_SUB_HOSPITAL_ID
		,COALESCE((SELECT
		a1.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a1
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
		WHERE
		a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
		AND a1.STATUS = b1.STATUS
		AND b1.STATUS = 1
		AND b1.CATEGORY_CODE = 'RELATION_ITEMS'
		AND a1.PARAMETER_VALUE =  A.RELATION), ' ')  AS RELATION_NAME
		,COALESCE((SELECT
		BANK_NAME
		FROM
		ESERVICE.DBO.BANK_INFO
		WHERE BRANCH_ID = 'root'
		AND DISPLAY = 'Y'
		AND BANK_ID = A.BANK_CODE), ' ')  AS BANK_NAME
		,COALESCE((SELECT
		BRANCH_NAME
		FROM
		ESERVICE.DBO.BANK_INFO
		WHERE BRANCH_ID != 'root'
		AND BANK_ID = A.BANK_CODE
		AND BRANCH_ID = A.BRANCH_CODE
		), ' ')  AS BRANCH_NAME
		,<include refid="INC2" />
		,TR.STATUS AS RFE_STATUS
		FROM
		ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM  A
		LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		LEFT JOIN  (	 SELECT  TOP 1 *  FROM  ESERVICE.DBO.TRANS_RFE  ORDER  BY REQUEST_DATE DESC  ) TR  ON  T.TRANS_NUM =TR.TRANS_NUM
		WHERE
		A.TRANS_NUM = #{transVo.transNum}
	</select>

	<!-- 取得線上申請資料-年金給付方式 -->
	<select id="getTransAnnuityMethod" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_ANNUITY_METHOD A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-變更紅利選擇權 -->
	<select id="getTransBonus" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_BOUNS A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-變更增值回饋分享金領取方式 -->
	<select id="getTransReward" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_REWARD A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-自動墊繳選擇權 -->
	<select id="getTransCushion" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_CUSHION A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-變更受益人 -->
	<select id="getTransBeneficiary" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_BENEFICIARY A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得受益人明細資料 -->
	<select id="getTransBeneficiaryDetailList" resultType="hashmap">
		SELECT
			BENEFICIARY_TYPE
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.BENEFICIARY_TYPE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = convert(varchar,BENEFICIARY_TYPE)
			), ' ') AS BENEFICIARY_TYPE_NAME
			,ESERVICE.DBO.FN_DEBASE64(BENEFICIARY_NAME) BENEFICIARY_NAME
			,BENEFICIARY_ROCID
			,BENEFICIARY_RELATION
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.BENEFICIARY_RELATION_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = convert(varchar,BENEFICIARY_RELATION)
			), ' ') AS BENEFICIARY_RELATION_NAME
			,REASON
			,ALLOCATE_TYPE
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.BENEFICIARY_ALLOCATE_TYPE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = convert(varchar,ALLOCATE_TYPE)
			), ' ') AS ALLOCATE_TYPE_NAME
			,ALLOCATE_SEQ
			,ESERVICE.DBO.FN_DEBASE64(BENEFICIARY_TEL) BENEFICIARY_TEL
			,BENEFICIARY_CITY
			,BENEFICIARY_REGION 
			,ESERVICE.DBO.FN_DEBASE64(BENEFICIARY_ADDRESS) BENEFICIARY_ADDRESS
			,ESERVICE.DBO.FN_DEBASE64(BENEFICIARY_ADDRESS_FULL) BENEFICIARY_ADDRESS_FULL
		FROM
			ESERVICE.DBO.TRANS_BENEFICIARY_DTL
		WHERE
			TRANS_BENEFICIARY_ID = #{transBeneficiaryId}
	</select>
	
	<!-- 取得受益人明細資料(原申請) -->
	<select id="getTransBeneficiaryDetailOldList" resultType="hashmap">
		SELECT
			ID
			,TRANS_BENEFICIARY_ID
			,BENEFICIARY_TYPE
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.BENEFICIARY_TYPE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = convert(varchar,BENEFICIARY_TYPE)
			), ' ') AS BENEFICIARY_TYPE_NAME
			,ESERVICE.DBO.FN_DEBASE64(BENEFICIARY_NAME) BENEFICIARY_NAME
			,BENEFICIARY_RELATION
			,ALLOCATE_TYPE
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.BENEFICIARY_ALLOCATE_TYPE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = convert(varchar,ALLOCATE_TYPE)
			), ' ') AS ALLOCATE_TYPE_NAME
			,ALLOCATE_SEQ
		FROM
			ESERVICE.DBO.TRANS_BENEFICIARY_OLD
		WHERE
			TRANS_BENEFICIARY_ID = #{transBeneficiaryId}
	</select>
	
	<!-- 取得線上申請資料-展期 -->
	<select id="getTransRenew" resultType="hashmap">
		SELECT
			<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS T
		WHERE
			T.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-減額 -->
	<select id="getTransReduce" resultType="hashmap">
		SELECT
			<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS T
		WHERE
			T.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-申請減少保險金額 -->
	<select id="getTransReducePolicy" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_REDUCE_POLICY A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得申請減少保險金額明細資料 -->
	<select id="getTransReducePolicyDetailList" resultType="hashmap">
		select 
			CONTRACT_TYPE, PRODUCT_NAME, CONTRACT_AMOUNT
		from 
			ESERVICE.DBO.TRANS_REDUCE_POLICY_DTL
		where 
			TRANS_REDUCE_POLICY_ID = #{transReducePolicyId}
	</select>
	
	<!-- 取得申請減少保險金額明細資料(原申請) -->
	<select id="getTransReducePolicyDetailOldList" resultType="hashmap">
		select 
			CONTRACT_TYPE, PRODUCT_NAME, CONTRACT_AMOUNT
		from 
			ESERVICE.DBO.TRANS_REDUCE_POLICY_OLD
		where 
			TRANS_REDUCE_POLICY_ID = #{transReducePolicyId}
	</select>
	
	<!-- 取得線上申請資料-變更保單聯絡資料 -->
	<select id="getTransContactInfo" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_CONTACT_INFO A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得變更保單聯絡明細資料 -->
	<select id="getTransContactInfoDetailList" resultType="hashmap">
		SELECT 
				ESERVICE.DBO.FN_DEBASE64(D.LIPM_NAME_1) LIPM_NAME_1,
				ESERVICE.DBO.FN_DEBASE64(A.NAME)  NAME,
				ESERVICE.DBO.FN_DEBASE64(A.TEL_HOME) TEL_HOME,
				ESERVICE.DBO.FN_DEBASE64(A.TEL_OFFICE) TEL_OFFICE, 
				ESERVICE.DBO.FN_DEBASE64(A.MOBILE) MOBILE, 
				A.CITY, 
				A.REGION, 
				ESERVICE.DBO.FN_DEBASE64(A.ADDRESS) ADDRESS, 
				ESERVICE.DBO.FN_DEBASE64(A.ADDRESS_FULL) ADDRESS_FULL,
				ESERVICE.DBO.FN_DEBASE64(A.ADDRESS_CHARGE) ADDRESS_CHARGE, 
				ESERVICE.DBO.FN_DEBASE64(A.ADDRESS_FULL_CHARGE) ADDRESS_FULL_CHARGE,
				ESERVICE.DBO.FN_DEBASE64(A.EMAIL) EMAIL,
				A.SEND_ALLIANCE,
				A.FROM_COMPANY_ID,
				A.TO_COMPANY_ID,
				D.LIPM_ID LIPM_ID,
				C.TRANS_NUM  TRANS_NUM,
				B.CASE_ID   CASE_ID
		  FROM 
				ESERVICE.DBO.TRANS_CONTACT_INFO_DTL A
				JOIN ESERVICE.DBO.TRANS_CONTACT_INFO B on A.TRANS_CONTACT_ID = B.ID
				JOIN ESERVICE.DBO.TRANS_POLICY C on B.TRANS_NUM = C.TRANS_NUM
				JOIN ESERVICE.DBO.LILIPM D ON C.POLICY_NO = D.LIPM_INSU_NO
	      WHERE A.TRANS_CONTACT_ID = #{transContactId}
	</select>
	<!--		A.SEND_OTHER_INS_COMPANY,-->
	<!-- 取得變更保單聯絡明細資料(原申請) -->
	<select id="getTransContactInfoDetailOldList" resultType="hashmap">
		SELECT
			ESERVICE.DBO.FN_DEBASE64(TEL_HOME) TEL_HOME,
			ESERVICE.DBO.FN_DEBASE64(TEL_OFFICE) TEL_OFFICE,
			ESERVICE.DBO.FN_DEBASE64(MOBILE) MOBILE,
			CITY,
			REGION,
			ESERVICE.DBO.FN_DEBASE64(ADDRESS) ADDRESS,
			ESERVICE.DBO.FN_DEBASE64(ADDRESS_FULL) ADDRESS_FULL,
			ESERVICE.DBO.FN_DEBASE64(ADDRESS_CHARGE) ADDRESS_CHARGE,
			ESERVICE.DBO.FN_DEBASE64(ADDRESS_FULL_CHARGE) ADDRESS_FULL_CHARGE
		FROM
			ESERVICE.DBO.TRANS_CONTACT_INFO_OLD
		WHERE
			TRANS_CONTACT_ID = #{transContactId}
	</select>
    
	<!-- 取得線上申請資料-設定停損停利通知 -->
	<select id="getTransFundNotification" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_FUND_NOTIFICATION A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得設定停損停利通知明細資料 -->
	<select id="getTransFundNotificationDetailList" resultType="hashmap">
		SELECT 
			f.FUND_CODE, f.FUND_NAME, tfnd.PERCENTAGE_UP, tfnd.PERCENTAGE_DOWN,
			tfnd.UP_VALUE, tfnd.DOWN_VALUE, tfnd.TYPE
		FROM 
			ESERVICE.DBO.TRANS_FUND_NOTIFICATION_DTL tfnd, 
			ESERVICE.DBO.FUND f
		WHERE 
			tfnd.FUND_CODE = f.FUND_CODE and
			tfnd.TRANS_FUND_NOTIFICATION_ID = #{transFundNotificationId}
	</select>
	
	<!-- 取得線上申請資料-變更收費管道 -->
	<select id="getTransPayMethod" resultType="hashmap">
		SELECT TOP 1 
			A.ID,
			A.TRANS_NUM,
			A.PAYMETHOD,
			A.PAYMETHOD_OLD,
			A.CARD_TYPE,
			ESERVICE.DBO.FN_DEBASE64(A.CARD_NO) CARD_NO,
			A.VALID_MM,
			A.VALID_YY,
			A.CARD_TYPE_OLD,
			ESERVICE.DBO.FN_DEBASE64(A.CARD_NO_OLD) CARD_NO_OLD,
			A.VALID_MM_OLD,
			A.VALID_YY_OLD,
			A.POLICY_NO
			,COALESCE((
				SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND b.CATEGORY_CODE = <include refid="ApConstantsMapper.PAYMENT_METHOD_TYPE_PARAMETER_CATEGORY_CODE"/>
					AND a.PARAMETER_CODE = convert(varchar,PAYMETHOD)
			), ' ') AS PAYMETHOD_NAME
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_PAYMETHOD A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-變更信用卡效期 -->
	<select id="getTransCreditCardInfo" resultType="hashmap">
		SELECT TOP 1 
			A.*
			,<include refid="INC2" />
			,PP.ACCT_NUMBER
			,PP.EXPIRE_DATE
			,I.NAME
		FROM 
			ESERVICE.DBO.TRANS_CREDIT_CARD_DATE A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
			LEFT JOIN ESERVICE.DBO.TRANS_POLICY TP ON T.TRANS_NUM = TP.TRANS_NUM
			LEFT JOIN ESERVICE.DBO.POLICY_PAYER PP ON PP.POLICY_NO = TP.POLICY_NO
			LEFT JOIN ESERVICE.DBO.INDIVIDUAL I ON PP.ROC_ID = I.ROC_ID
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-解約 -->
	<select id="getTransCancelContract" resultType="hashmap">
		SELECT TOP 1 
			A.ID,A.TRANS_NUM,A.BANK_ID,A.BRANCH_ID,ESERVICE.DBO.FN_DEBASE64(A.ACCOUNT_NO) ACCOUNT_NO,ESERVICE.DBO.FN_DEBASE64(A.ACCOUNT_NAME) ACCOUNT_NAME
			,<include refid="INC2" />
			,BI.BANK_NAME
			,BI.BRANCH_NAME
		FROM 
			ESERVICE.DBO.TRANS_BANK_INFO A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
			LEFT JOIN ESERVICE.DBO.BANK_INFO BI ON A.BANK_ID = BI.BANK_ID
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-紅利提領列印 -->
	<select id="getTransSurrender" resultType="hashmap">
		SELECT TOP 1 
			A.ID,A.TRANS_NUM,A.BANK_ID,A.BRANCH_ID,ESERVICE.DBO.FN_DEBASE64(A.ACCOUNT_NO) ACCOUNT_NO,ESERVICE.DBO.FN_DEBASE64(A.ACCOUNT_NAME) ACCOUNT_NAME
			,<include refid="INC2" />
			,BI.BANK_NAME
			,BI.BRANCH_NAME
		FROM 
			ESERVICE.DBO.TRANS_BANK_INFO A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
			LEFT JOIN ESERVICE.DBO.BANK_INFO BI ON A.BANK_ID = BI.BANK_ID
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-申請保單貸款 -->
	<select id="getTransLoan" resultType="hashmap">
		SELECT TOP 1 
			A.ID,A.TRANS_NUM,A.BANK_ID,A.BRANCH_ID,ESERVICE.DBO.FN_DEBASE64(A.ACCOUNT_NO) ACCOUNT_NO,ESERVICE.DBO.FN_DEBASE64(A.ACCOUNT_NAME) ACCOUNT_NAME
			,<include refid="INC2" />
			,BI.BANK_NAME
			,BI.BRANCH_NAME
			,(CASE WHEN (SELECT COUNT(*) FROM ESERVICE.DBO.TRANS_FILE WHERE TRANS_NUM=#{transVo.transNum}) > 0 THEN 'Y' ELSE 'N' END) AS UPLOAD_FLAG
		FROM 
			ESERVICE.DBO.TRANS_BANK_INFO A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
			LEFT JOIN ESERVICE.DBO.BANK_INFO BI ON A.BANK_ID = BI.BANK_ID
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-基本資料變更 -->
	<select id="getTransLoanCustInfo" resultType="hashmap">
		SELECT TOP 1 
			A.ID
			,A.TRANS_NUM
			,ESERVICE.DBO.FN_DEBASE64(A.MOBILE) MOBILE
			,ESERVICE.DBO.FN_DEBASE64(A.EMAIL) EMAIL
			,A.SMS_FLAG
			,A.MAIL_FLAG
			,ESERVICE.DBO.FN_DEBASE64(A.MOBILE_OLD) MOBILE_OLD
			,ESERVICE.DBO.FN_DEBASE64(A.EMAIL_OLD) EMAIL_OLD
			,A.SMS_FLAG_OLD
			,A.MAIL_FLAG_OLD
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_CUST_INFO A
			LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE
			A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-滿期 -->
	<select id="getTransMaturity" resultType="hashmap">
        SELECT TOP 1 
            T.TRANS_NUM
            , <include refid="INC2" />
            ,(CASE WHEN (SELECT COUNT(*) FROM ESERVICE.DBO.TRANS_FILE WHERE TRANS_NUM=#{transVo.transNum}) > 0 THEN 'Y' ELSE 'N' END) AS UPLOAD_FLAG
        FROM 
            ESERVICE.DBO.TRANS T
        <where>
            AND T.TRANS_NUM = #{transVo.transNum}
        </where>
	</select>
	
	<!-- 取得線上申請資料-補發保單 -->
	<select id="getTransResendPolicy" resultType="hashmap">
	   SELECT TOP 1  
	       A.ID
	       ,A.TRANS_NUM
	       ,ESERVICE.DBO.FN_DEBASE64(A.NAME) NAME
	       ,ESERVICE.DBO.FN_DEBASE64(A.TEL) TEL
	       ,ESERVICE.DBO.FN_DEBASE64(A.ADDRESS) ADDRESS
		   ,(CASE WHEN (SELECT COUNT(*) FROM ESERVICE.DBO.TRANS_FILE WHERE TRANS_NUM=#{transVo.transNum}) > 0 THEN 'Y' ELSE 'N' END) AS UPLOAD_FLAG
	       , <include refid="INC2"/>
        FROM 
            ESERVICE.DBO.TRANS_RESEND_POLICY A
            LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM=T.TRANS_NUM
        <where>
            AND T.TRANS_NUM = #{transVo.transNum}
        </where>
	</select>
	
	<!-- 取得線上申請資料-終止授權 -->
	<select id="getTransCancelAuth" resultType="hashmap">
        SELECT  TOP 1 
            T.TRANS_NUM
            , <include refid="INC2"/>
        FROM 
            ESERVICE.DBO.TRANS T
        <where>
            AND T.TRANS_NUM = #{transVo.transNum}
        </where>
	</select>
	
	<!-- 取得線上申請資料-保單價值列印 -->
	<select id="getTransValuePrint" resultType="hashmap">
        SELECT  TOP 1 
            A.ID
            ,A.TRANS_NUM
            ,A.LANG
            ,A.DELIVER_TYPE
            ,ESERVICE.DBO.FN_DEBASE64(A.DELIVER_ADDR) DELIVER_ADDR
            ,ESERVICE.DBO.FN_DEBASE64(A.BELIVER_MAIL) BELIVER_MAIL
            , <include refid="INC2"/>
        FROM ESERVICE.DBO.TRANS_VALUE_PRINT A
        LEFT JOIN ESERVICE.DBO.TRANS T  ON T.TRANS_NUM = A.TRANS_NUM
        <where>
            AND A.TRANS_NUM = #{transVo.transNum}
        </where>
	</select>
	
	<!-- 旅平險資料補充欄位 -->
	<sql id="TPC1">
        (
            SELECT PARAMETER_VALUE 
		    FROM ESERVICE_ADM.DBO.PARAMETER 
		    WHERE PARAMETER_CATEGORY_ID=(
		        SELECT PARAMETER_CATEGORY_ID 
		        FROM ESERVICE_ADM.DBO.PARAMETER_CATEGORY 
		        WHERE CATEGORY_CODE = 'RECEIVE_POLICY_LOCATION') 
		      AND PARAMETER_CODE = EX.WNPI_DEPT_ID 
		) AS WNPI_DEPT
        , ESERVICE.DBO.FN_DEBASE64(HO.NAME) AS HOLDER_NAME
        , ESERVICE.DBO.FN_DEBASE64(INS.NAME) AS INSURED_NAME
        ,(CASE WHEN (SELECT COUNT(*) FROM ESERVICE.DBO.TRANS_FILE WHERE TRANS_NUM=#{transVo.transNum}) > 0 THEN 'Y' ELSE 'N' END) AS UPLOAD_FLAG
	</sql>
	
	<!-- 取得線上申請資料-旅平險 -->
	<select id="getTransTravelPolicy" resultType="hashmap">
	        SELECT  TOP 1 
	            A.*
	            , <include refid="INC2"/>
	            , <include refid="TPC1"/>
        	FROM ESERVICE.DBO.TRANS_TRAVELPOLICY A
            LEFT JOIN ESERVICE.DBO.TRANS T ON T.TRANS_NUM = A.TRANS_NUM
            LEFT JOIN ESERVICE.DBO.TRANS_TRAVELPOLICY_BENE BE ON BE.TRANS_NUM = A.TRANS_NUM
            LEFT JOIN ESERVICE.DBO.TRANS_TRAVELPOLICY_EXT EX ON EX.TRANS_NUM = A.TRANS_NUM
            LEFT JOIN ESERVICE.DBO.TRANS_TRAVELPOLICY_HOLDER HO ON HO.TRANS_NUM = A.TRANS_NUM
            LEFT JOIN ESERVICE.DBO.TRANS_TRAVELPOLICY_INSURED INS ON INS.TRANS_NUM = A.TRANS_NUM 
        <where>
            AND A.TRANS_NUM = #{transVo.transNum}
        </where>
	</select>
	
	<!-- 更新線上申請狀態 -->
	<update id="updateTransStatus" parameterType="com.twfhclife.adm.model.TransVo">
		UPDATE
			ESERVICE.DBO.TRANS
		SET
			STATUS = #{transVo.status,jdbcType=VARCHAR}
			,UPDATE_USER = #{transVo.updateUser,jdbcType=VARCHAR}
			,UPDATE_DATE = getdate()
		WHERE
			TRANS_NUM = #{transVo.transNum,jdbcType=VARCHAR}
	</update>
	
	<!-- 更新保單理賠紙本回收狀態 -->
	<update id="updateInsuranceClaimFileReceived" parameterType="com.twfhclife.adm.model.TransInsuranceClaimVo">
		UPDATE
			ESERVICE.DBO.TRANS_INSURANCE_CLAIM
		SET
			FILE_RECEIVED = #{vo.fileReceived,jdbcType=VARCHAR}
			<if test="date != null">
				,FILE_RECEIVE_DATE = #{date}
			</if>
		WHERE
			TRANS_NUM = #{vo.transNum,jdbcType=VARCHAR}
	<if test="vo.oldFileReceived != null and vo.oldFileReceived != ''" >
		AND
			FILE_RECEIVED = #{vo.oldFileReceived,jdbcType=VARCHAR}
			</if>
	</update>
	
	<update id="updateICFileReceived" parameterType="com.twfhclife.adm.model.TransInsuranceClaimVo">
		UPDATE
			ESERVICE.DBO.INSURANCE_CLAIM
		SET
			FILE_RECEIVED = #{vo.fileReceived,jdbcType=VARCHAR}
		WHERE
			TRANS_NUM = #{vo.transNum,jdbcType=VARCHAR}
	<if test="vo.oldFileReceived != null and vo.oldFileReceived != ''" >
		AND
		    FILE_RECEIVED = #{vo.oldFileReceived,jdbcType=VARCHAR}
			</if>
		
	</update>
	
	<!-- 更新保單理賠紙本傳送聯盟鏈狀態 -->
	<update id="updateInsuranceClaimSendAlliance" parameterType="com.twfhclife.adm.model.TransInsuranceClaimVo">
		UPDATE
			ESERVICE.DBO.TRANS_INSURANCE_CLAIM
		SET
			SEND_ALLIANCE = #{vo.sendAlliance,jdbcType=VARCHAR}
			<if test="date != null">
				,SEND_ALLIANCE_DATE = #{date}
			</if>
		WHERE
			TRANS_NUM = #{vo.transNum,jdbcType=VARCHAR}
	</update>
	
	<resultMap type="com.twfhclife.adm.model.TransUploadFileVo" id="transFileMap">
        <result column="FILE_NAME" property="filename" />
        <result column="FILE_DATA" property="fileData" />
	</resultMap>
	<!-- 取出上傳檔案 -->
	<select id="getAllUploadFile" resultMap="transFileMap">
        SELECT 
            FILE_NAME, FILE_DATA
        FROM 
            ESERVICE.DBO.TRANS_FILE
        <where>
            AND TRANS_NUM = #{transVo.transNum}
        </where>
	</select>
	
	<!-- 取得線上申請資料-變更匯款帳戶 -->
	<select id="getTransChangePayAccount" resultType="hashmap">
        SELECT  TOP 1 
            A.*
            , <include refid="INC2"/>
            , CONCAT(BI.BANK_NAME, CONCAT('(', CONCAT(BI.BANK_ID, ')'))) AS BANK_NAME
	        , CONCAT(BI.BRANCH_NAME, CONCAT('(', CONCAT(BI.BRANCH_NAME, ')'))) AS BRANCH_NAME
	        , ESERVICE.DBO.FN_DEBASE64(TB.ACCOUNT_NAME) AS ACCOUNT_NAME
	        , ESERVICE.DBO.FN_DEBASE64(TB.ACCOUNT_NO) AS ACCOUNT_NO
        FROM 
            ESERVICE.DBO.TRANS_CHANGE_ACCOUNT A
            LEFT JOIN ESERVICE.DBO.TRANS T ON T.TRANS_NUM = A.TRANS_NUM
            LEFT JOIN ESERVICE.DBO.TRANS_BANK_INFO TB ON TB.TRANS_NUM = A.TRANS_NUM 
            LEFT JOIN ESERVICE.DBO.BANK_INFO BI ON BI.BANK_ID = TB.BANK_ID AND BI.BRANCH_ID = TB.BRANCH_ID 
        <where>
            AND A.TRANS_NUM = #{transVo.transNum} 
        </where>
	</select>
	
	<!-- 查詢線上申請額外資料 -->
	<select id="getTransExtendsByTransNum" resultMap="TransExtendAttrMap">
		SELECT
			ID, TRANS_NUM, ATTR_KEY, ESERVICE.DBO.FN_DEBASE64(ATTR_VALUE) ATTR_VALUE
		FROM
			ESERVICE.DBO.TRANS_EXTEND_ATTR
		WHERE TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得變更風險屬性資料 -->
	<select id="getTransRiskLevel" resultType="hashmap">
		SELECT A.* ,<include refid="INC2" />
		FROM ESERVICE.DBO.TRANS_RISK_LEVEL A
		LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得保戶基本資料更新資料 -->
	<select id="getTransPolicyHolderProfile" resultType="hashmap">
		SELECT A.* ,<include refid="INC2" />
		FROM  ESERVICE.DBO.TRANS_POLICY_HOLDER_PROFILE A
		LEFT JOIN ESERVICE.DBO.TRANS T ON A.TRANS_NUM = T.TRANS_NUM
		WHERE A.TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得線上申請資料-變更投資標的及配置比例-->
	<select id="getTransFundSwitch" resultType="hashmap">
		SELECT
			<include refid="INC2" />
		FROM ESERVICE.DBO..TRANS T
		WHERE
			T.TRANS_NUM = #{transVo.transNum}
			AND ROWNUM = 1
	</select>
	
	<!-- 取得線上申請資料-死亡除戶資料-->
	<select id="getDnsAlliance" resultType="hashmap">
		 select
		<include refid="TRANS_DNS_ALL"></include>
			,B.TRANS_TYPE,B.STATUS,
		 <include refid="Trans_Sex_Con_List" />
		 from ESERVICE.DBO.TRANS_DNS A lEFT JOIN ESERVICE.DBO.TRANS B ON A.TRANS_NUM = B.TRANS_NUM 
		 where A.TRANS_NUM =  #{transVo.transNum}
		 order by A.CREATE_DATE desc
	</select>
	
	<!-- 取得變更投資標的及配置比例轉出資料 -->
	<select id="getTransFundSwitchOut" resultType="hashmap">
		SELECT TRANS_NUM,FUND_CODE,FUND_NAME,SWITCH_PERCENTAGE,SWITCH_AMOUNT
		FROM ESERVICE.DBO..TRANS_FUND_SWITCH_OUT
		WHERE TRANS_NUM = #{transVo.transNum}
	</select>
	
	<!-- 取得變更投資標的及配置比例轉入資料 -->
	<select id="getTransFundSwitchIn" resultType="hashmap">
		SELECT TRANS_NUM,FUND_CODE,FUND_NAME,SWITCH_PERCENTAGE,SWITCH_AMOUNT
		FROM ESERVICE.DBO.TRANS_FUND_SWITCH_IN
		WHERE TRANS_NUM = #{transVo.transNum}
	</select>
				<select id="getFileDatasByClaimSeqId" resultType="hashmap" parameterType="java.lang.Float">
		select * from ESERVICE.DBO.TRANS_INSURANCE_CLAIM_FILEDATAS
		where CLAIMS_SEQ_ID = #{claimSeqId}
		order by CREATE_DATE desc
	</select>
	
	<insert id="addTransStatusHistory" parameterType="com.twfhclife.adm.model.TransStatusHistoryVo">
		INSERT INTO 
       		ESERVICE.DBO.TRANS_STATUS_HISTORY
       		(TS_ID,TRANS_NUM,CUSTOMERNAME,USER_IDENTITY,STATUS,REJECT_REASON,CONTENT)
       	VALUES
       		(   (NEXT VALUE FOR ESERVICE.DBO.TRANS_STATUS_HISTORY_SEQ), 
       			#{vo.transNum,  jdbcType=VARCHAR},
       			#{vo.customerName, jdbcType=VARCHAR},
       			#{vo.identity, jdbcType=VARCHAR},
       			#{vo.status, jdbcType=VARCHAR},
       			#{vo.rejectReason, jdbcType=VARCHAR},
       			#{vo.content, jdbcType=VARCHAR}
       		)
	</insert>
	
	<insert id="addTransRFE" parameterType="com.twfhclife.adm.model.TransRFEVo">
		INSERT INTO 
       		ESERVICE.DBO.TRANS_RFE
       		(RFE_ID,TRANS_NUM,STATUS,REQUEST_CONTENT)
       	VALUES
       		(   (NEXT VALUE FOR ESERVICE.DBO.TRANS_RFE_SEQ), 
       			#{vo.transNum,  jdbcType=VARCHAR},
       			#{vo.status, jdbcType=VARCHAR},
       			#{vo.requestContent, jdbcType=VARCHAR}
       		)
	</insert>
	
	<select id="getTransStatusHistoryList" resultMap="transHIS">
		select
                T.TS_ID,
                T.TRANS_NUM,
                T.USER_IDENTITY,
                T.CUSTOMERNAME,
                T.CONTENT,
                COALESCE(( SELECT a.PARAMETER_NAME
                    FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
                   WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS
                     AND b.STATUS = 1 AND b.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
                     AND a.PARAMETER_CODE = T.STATUS),'') as STATUS,
                T.REQUEST_DATE
        from ESERVICE.DBO.TRANS_STATUS_HISTORY T
        where T.TRANS_NUM = #{vo.transNum} 
        <if test="vo.status != null and vo.status != ''" >
				AND T.STATUS = #{vo.status, jdbcType=VARCHAR}	
		</if>
		<if test="vo.startDate != null and vo.startDate != ''" >
				AND T.REQUEST_DATE &gt; #{vo.startDate, jdbcType=DATE}
		</if>
		<if test="vo.endDate != null and vo.endDate != ''" >
				AND T.REQUEST_DATE &lt; #{vo.endDate, jdbcType=DATE}	
		</if>
        order by T.REQUEST_DATE desc
	</select>
	
	<select id="getTransRFEList" resultMap="transRFE">
		select
                T.RFE_ID,
                T.TRANS_NUM,
                T.REQUEST_CONTENT,
                T.RESPONSE_CONTENT,
                T.STATUS,
                ( SELECT a.PARAMETER_NAME
                    FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
                   WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS
                     AND b.STATUS = 1 AND b.CATEGORY_CODE = 'REVIEW_STATUS_CODE'
                     AND a.PARAMETER_VALUE = T.STATUS) as STATUS_NAME,
                T.REQUEST_DATE,
                T.RESPONSE_DATE
        from ESERVICE.DBO.TRANS_RFE T
        where T.TRANS_NUM = #{vo.transNum} 
        <if test="vo.rfeId != null and vo.rfeId != ''" >
				AND T.RFE_ID = #{vo.rfeId, jdbcType=VARCHAR}	
		</if>
		<if test="vo.startDate != null and vo.startDate != ''" >
				AND T.REQUEST_DATE &gt; #{vo.startDate, jdbcType=DATE}
		</if>
		<if test="vo.endDate != null and vo.endDate != ''" >
				AND T.REQUEST_DATE &lt; #{vo.endDate, jdbcType=DATE}	
		</if>
        order by T.REQUEST_DATE desc
	</select>
	
	<select id="getTransInsCliamFileData" resultMap="TransInsCliamFileDataResultMap">
	   select B.CLAIMS_SEQ_ID,B.TYPE,B.PATH,B.FILE_NAME,B.FILE_BASE64
		 from ESERVICE.dbo.TRANS_INSURANCE_CLAIM_FILEDATAS B 
		where B.TYPE = 'C'
		  and B.RFE_ID  =  #{vo.rfeId} 
	</select>

<!--保單醫療附件-->
	<select id="getTransMedicalTreatmentClaimFiledatas" resultMap="medicalTreatmentClaimFileDataResultMap">
		select B.CLAIMS_SEQ_ID,B.TYPE,B.PATH,B.FILE_NAME,B.FILE_BASE64
		from ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS B
		where B.TYPE = 'C'
		and B.RFE_ID  =  #{vo.rfeId}
	</select>
	<update id="updateTransRFEStatus">
		update ESERVICE.dbo.TRANS_RFE 
		   set  RESPONSE_DATE = getDate(),
		        STATUS = #{vo.status}
		  where STATUS = 'WAIT'
		    and RFE_ID = #{vo.rfeId}
	</update>
	
	<select id="getRoleName" resultType="java.lang.String"  parameterType="java.lang.String">
		select R.ROLE_NAME
		from ESERVICE_ADM.DBO.USER_ROLE U , ESERVICE_ADM.DBO.ROLE R
		where U.USER_ID = #{userId, jdbcType=VARCHAR} and U.ROLE_ID = R.ROLE_ID and 
		R.ROLE_ID in (SELECT a.PARAMETER_VALUE
                    FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
                   WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS
                     AND b.STATUS = 1 AND b.CATEGORY_CODE = 'ROLE_CODE')
	</select>
	
	<resultMap id="TransInsuranceClaimResultMap" type="com.twfhclife.adm.model.TransInsuranceClaimVo">
		<id property="claimSeqId"  column="CLAIMS_SEQ_ID" />
		<result property="caseId" column="CASE_ID" />
		<result property="transNum"      column="TRANS_NUM" />
		<result property="fileReceived"  column="FILE_RECEIVED" />
		<result property="name"   column="NAME" />
		<result property="idNo"   column="ID_NO" />
		<result property="birdate"   column="BIRDATE" />
		<result property="phone"     column="PHONE" />
		<result property="zipCode"   column="ZIP_CODE" />
		<result property="address"   column="ADDRESS" />
		<result property="mail"      column="MAIL" />
		<result property="paymentMethod" column="PAYMENT_METHOD" />
		<result property="bankCode"    column="BANK_CODE" />
		<result property="branchCode"  column="BRANCH_CODE" />
		<result property="bankAccount" column="BANK_ACCOUNT" />
		<result property="applicationDate" column="APPLICATION_DATE" />
		<result property="applicationTime" column="APPLICATION_TIME" />
		<result property="applicationItem" column="APPLICATION_ITEM" />
		<result property="job"             column="JOB" />
		<result property="jobDescr" column="JOB_DESCR" />
		<result property="accidentDate"  column="ACCIDENT_DATE" />
		<result property="accidentTime"  column="ACCIDENT_TIME" />
		<result property="accidentCause" column="ACCIDENT_CAUSE" />
		<result property="accidentLocation" column="ACCIDENT_LOCATION" />
		<result property="accidentDescr" column="ACCIDENT_DESCR" />
		<result property="policeStation" column="POLICE_STATION" />
		<result property="policeName"    column="POLICE_NAME" />
		<result property="policePhone" column="POLICE_PHONE" />
		<result property="policeDate"  column="POLICE_DATE" />
		<result property="policeTime"  column="POLICE_TIME" />
		<result property="from"        column="FROM_COMPANY_ID" />
		<result property="to"            column="TO_COMPANY_ID" />
		<result property="sendAlliance"  column="SEND_ALLIANCE" />
		<result property="applyItem"  column="APPLYITEM" />
		<result property="policyNo"  column="POLICYNO" />
		<result property="customerName"  column="CUSTOMERNAME" />
		<result property="relation"  column="RELATION" />
		<result property="tel"  column="TEL" />
		<result property="diseaseName"  column="DISEASENAME" />
		<result property="hospital"  column="HOSPITAL" />
		<result property="otherCompanyInsured"  column="OTHERCOMPANYINSURED" />
		<result property="otherInsuCompany"  column="OTHERINSUCOMMPANY" />
		<result property="otherInsuType"  column="OTHERINSUTYPE" />
		<result property="otherInsuAmout"  column="OTHERINSUAMOUNT" />
		<result property="otherInsuClaim"  column="OTHERINSUCLAIM" />
		<result property="accountName" column="ACCOUNTNAME" />
		<result property="callPolice" column="CALLPOLICE" />
		<result property="signAgree" column="SIGN_AGREE" />
		<!-- <result property="createDate"    column="CREATE_DATE" /> -->
	</resultMap>

	<resultMap id="TransMedicalTreatmentClaimResultMap" type="com.twfhclife.adm.model.TransMedicalTreatmentClaimVo">
		<id property="claimSeqId"  column="CLAIMS_SEQ_ID" />
		<result property="caseId" column="CASE_ID" />
		<result property="transNum"      column="TRANS_NUM" />
		<result property="fileReceived"  column="FILE_RECEIVED" />
		<result property="name"   column="NAME" />
		<result property="idNo"   column="ID_NO" />
		<result property="birdate"   column="BIRDATE" />
		<result property="phone"     column="PHONE" />
		<result property="zipCode"   column="ZIP_CODE" />
		<result property="address"   column="ADDRESS" />
		<result property="mail"      column="MAIL" />
		<result property="paymentMethod" column="PAYMENT_METHOD" />
		<result property="bankCode"    column="BANK_CODE" />
		<result property="branchCode"  column="BRANCH_CODE" />
		<result property="bankAccount" column="BANK_ACCOUNT" />
		<result property="applicationDate" column="APPLICATION_DATE" />
		<result property="applicationTime" column="APPLICATION_TIME" />
		<result property="applicationItem" column="APPLICATION_ITEM" />
		<result property="job"             column="JOB" />
		<result property="jobDescr" column="JOB_DESCR" />
		<result property="accidentDate"  column="ACCIDENT_DATE" />
		<result property="accidentTime"  column="ACCIDENT_TIME" />
		<result property="accidentCause" column="ACCIDENT_CAUSE" />
		<result property="accidentLocation" column="ACCIDENT_LOCATION" />
		<result property="accidentDescr" column="ACCIDENT_DESCR" />
		<result property="policeStation" column="POLICE_STATION" />
		<result property="policeName"    column="POLICE_NAME" />
		<result property="policePhone" column="POLICE_PHONE" />
		<result property="policeDate"  column="POLICE_DATE" />
		<result property="policeTime"  column="POLICE_TIME" />
		<result property="from"        column="FROM_COMPANY_ID" />
		<result property="to"            column="TO_COMPANY_ID" />
		<result property="sendAlliance"  column="SEND_ALLIANCE" />
		<result property="applyItem"  column="APPLYITEM" />
		<result property="policyNo"  column="POLICYNO" />
		<result property="customerName"  column="CUSTOMERNAME" />
		<result property="relation"  column="RELATION" />
		<result property="tel"  column="TEL" />
		<result property="diseaseName"  column="DISEASENAME" />
		<result property="hospital"  column="HOSPITAL" />
		<result property="otherCompanyInsured"  column="OTHERCOMPANYINSURED" />
		<result property="otherInsuCompany"  column="OTHERINSUCOMMPANY" />
		<result property="otherInsuType"  column="OTHERINSUTYPE" />
		<result property="otherInsuAmout"  column="OTHERINSUAMOUNT" />
		<result property="otherInsuClaim"  column="OTHERINSUCLAIM" />
		<result property="accountName" column="ACCOUNTNAME" />
		<result property="callPolice" column="CALLPOLICE" />
		<result property="authorizationFileType" column="AUTHORIZATION_FILE_TYPE" />
		<result property="authorizationStartDate" column="AUTHORIZATION_START_DATE" />
		<result property="authorizationEndDate" column="AUTHORIZATION_END_DATE" />
		<result property="fromHospitalId" column="FROM_HOSPITAL_ID" />
		<result property="toHospitalId" column="TO_HOSPITAL_ID" />
		<result property="allianceStatus" column="ALLIANCE_STATUS" />
		<result property="hpUid" column="HP_UID" />
		<result property="cpOa" column="CPOA" />
		<result property="allianceFileStatus" column="ALLIANCE_FILE_STATUS" />
		<result property="diagnosisDate" column="DIAGNOSISDATE" />
		<!-- <result property="createDate"    column="CREATE_DATE" /> -->
	</resultMap>


	<resultMap id="TransInsuranceCliamFileDataResultMap" type="com.twfhclife.adm.model.TransInsuranceClaimFileDataVo">
		<result property="claimSeqId" column="CLAIMS_SEQ_ID" />
		<result property="type"  column="TYPE" />
		<result property="fileName"    column="FILE_NAME" />
		<result property="filePath"  column="PATH" />
	</resultMap>
	
	<sql id="Base_Column_List">
		CLAIMS_SEQ_ID,TRANS_NUM,NAME,ID_NO,BIRDATE,PHONE,ZIP_CODE,ADDRESS,MAIL,PAYMENT_METHOD,BANK_CODE,BRANCH_CODE,BANK_ACCOUNT,
       	APPLICATION_DATE,APPLICATION_TIME,APPLICATION_ITEM,JOB,JOB_DESCR,ACCIDENT_DATE,ACCIDENT_TIME,ACCIDENT_CAUSE,
       	ACCIDENT_LOCATION,ACCIDENT_DESCR,POLICE_STATION,POLICE_NAME,POLICE_PHONE,POLICE_DATE,POLICE_TIME,FROM_COMPANY_ID,
       	TO_COMPANY_ID,FILE_RECEIVED,SEND_ALLIANCE
	</sql>

	<sql id="Base_Medical_Column_List">
		CLAIMS_SEQ_ID,TRANS_NUM,FILE_RECEIVED,APPLYITEM,POLICYNO
		,CUSTOMERNAME,NAME,RELATION,ID_NO,BIRDATE
		,TEL,PHONE,ZIP_CODE,ADDRESS,MAIL
		,DISEASENAME,DIAGNOSISDATE,HOSPITAL,OTHERCOMPANYINSURED
		,OTHERINSUCOMMPANY,OTHERINSUTYPE,OTHERINSUAMOUNT,OTHERINSUCLAIM,PAYMENT_METHOD
		,BANK_CODE,BRANCH_CODE,BANK_ACCOUNT,ACCOUNTNAME,APPLICATION_DATE
		,APPLICATION_TIME,APPLICATION_ITEM,JOB,JOB_DESCR
		,ACCIDENT_DATE,ACCIDENT_TIME,ACCIDENT_CAUSE,ACCIDENT_LOCATION,ACCIDENT_DESCR
		,POLICE_STATION,POLICE_NAME,POLICE_PHONE,POLICE_DATE,POLICE_TIME
		,CALLPOLICE,SEND_ALLIANCE,FROM_COMPANY_ID,TO_COMPANY_ID
		,AUTHORIZATION_FILE_TYPE,AUTHORIZATION_START_DATE,AUTHORIZATION_END_DATE,TO_HOSPITAL_ID,FROM_HOSPITAL_ID
		,ALLIANCE_STATUS,HP_UID,CPOA
	</sql>
	<select id="getInsuranceClaimSequence" resultType="java.lang.Float">
		select NEXT VALUE for ESERVICE.DBO.INSURANCE_CLAIM_SEQ as CLAIMS_SEQ_ID;
	</select>
	
	<select id="getTransInsuranceClaimByTransNum" resultMap="TransInsuranceClaimResultMap" parameterType="java.lang.String">
		select
		<include refid="TRANS_INSURANCE_CLAIM_ALL"></include>
		from ESERVICE.DBO.TRANS_INSURANCE_CLAIM A
		where A.TRANS_NUM = #{transNum}
		order by A.CREATE_DATE desc
	</select>
	
	<select id="getFileDatas" resultMap="TransInsuranceCliamFileDataResultMap" parameterType="java.lang.Float">
		select * from ESERVICE.DBO.TRANS_INSURANCE_CLAIM_FILEDATAS
		where CLAIMS_SEQ_ID = #{claimSeqId} and TYPE IN ('MEDICAL_RECEIPT','DIAGNOSIS_CERTIFICATE', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'Z')
		order by CREATE_DATE desc
	</select>
	
	<insert id="addInsuranceClaim" parameterType="com.twfhclife.adm.model.TransInsuranceClaimVo" >
		INSERT INTO 
       		ESERVICE.DBO.INSURANCE_CLAIM
       		(
       		<include refid="Base_Column_List" />,SIGN_AGREE
       		)
       	VALUES
       		(
       			<choose>
       				<when test="vo.claimSeqId!=null and vo.claimSeqId>0">
       					#{vo.claimSeqId, jdbcType=FLOAT},
       				</when>
       				<otherwise>
       					(NEXT VALUE for INSURANCE_CLAIM_SEQ),
       				</otherwise>
       			</choose>
       			#{vo.transNum,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.name, jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.idNo, jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.birdate, jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.phone, jdbcType=VARCHAR}),
       			#{vo.zipCode, jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.address, jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.mail, jdbcType=VARCHAR}),
       			#{vo.paymentMethod, jdbcType=VARCHAR},
       			#{vo.bankCode, jdbcType=VARCHAR},
       			#{vo.branchCode, jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.bankAccount, jdbcType=VARCHAR}),
       			#{vo.applicationDate, jdbcType=VARCHAR},
       			#{vo.applicationTime, jdbcType=VARCHAR},
       			#{vo.applicationItem, jdbcType=VARCHAR},
       			#{vo.job, jdbcType=VARCHAR},
       			#{vo.jobDescr, jdbcType=VARCHAR},
       			#{vo.accidentDate, jdbcType=VARCHAR},
       			#{vo.accidentTime, jdbcType=VARCHAR},
       			#{vo.accidentCause, jdbcType=VARCHAR},
       			#{vo.accidentLocation, jdbcType=VARCHAR},
       			#{vo.accidentDescr, jdbcType=VARCHAR},
       			#{vo.policeStation, jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.policeName, jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.policePhone, jdbcType=VARCHAR}),
       			#{vo.policeDate, jdbcType=VARCHAR},
       			#{vo.policeTime, jdbcType=VARCHAR},
       			#{vo.from, jdbcType=VARCHAR},
       			#{vo.to, jdbcType=VARCHAR},
       			#{vo.fileReceived, jdbcType=VARCHAR},
       			'Y',
				#{vo.signAgree, jdbcType=VARCHAR}
			)
	</insert>

	<insert id="addInsuranceClaimFileData" parameterType="com.twfhclife.adm.model.TransInsuranceClaimFileDataVo">
		INSERT INTO 
       		ESERVICE.DBO.INSURANCE_CLAIM_FILEDATAS
       		(CLAIMS_SEQ_ID,FILE_ID,SIZE,TYPE,FILE_NAME,FILE_STATUS,PATH,FILE_BASE64)
       	VALUES
       		(
       			#{vo.claimSeqId,  jdbcType=FLOAT},
       			'0',
       			'0',
       			<choose>
       				<when test="vo.type!=null and vo.type=='DIAGNOSIS_CERTIFICATE'.toString()">
       					'A',
       				</when>
					<when test="vo.type!=null and vo.type=='MEDICAL_RECEIPT'.toString()">
						'B',
					</when>
       				<otherwise>
       					#{vo.type},
       				</otherwise>
       			</choose>
       			#{vo.fileName, jdbcType=VARCHAR},
       			'0',
       			#{vo.filePath, jdbcType=VARCHAR},
       			#{vo.fileBase64, jdbcType=VARCHAR}
       		)
	</insert>
	
	<select id="getCaseIDNum" resultType="java.lang.Integer" parameterType="java.lang.String">
		select COUNT(*) from ESERVICE.DBO.TRANS_INSURANCE_CLAIM
		where TRANS_NUM = #{transNum} and CASE_ID IS NOT NULL
	</select>
	
	<select id="checkIdNoExist" resultType="java.lang.Integer" parameterType="java.lang.String">
		select COUNT(A.ID_NO) from ESERVICE_ADM.DBO.BLACK_LIST A,ESERVICE.DBO.TRANS_INSURANCE_CLAIM B
		where A.ID_NO = ESERVICE.DBO.FN_DEBASE64(B.ID_NO) and B.TRANS_NUM = #{transNum}
	</select>
	
	<insert id="addBlackList" parameterType="com.twfhclife.adm.model.BlackListVo">
		INSERT INTO ESERVICE_ADM.DBO.BLACK_LIST
       		(BL_ID,TRANS_NUM,TRANS_TYPE,ID_NO,CREATE_DATE)
        select 
               (NEXT VALUE FOR ESERVICE_ADM.DBO.BLACK_LIST_SEQ), 
               B.TRANS_NUM,
               A.TRANS_TYPE,
		ESERVICE.DBO.FN_DEBASE64(B.ID_NO),
               getDate()
		  from ESERVICE.DBO.TRANS A,ESERVICE.DBO.TRANS_INSURANCE_CLAIM B
		 where A.TRANS_NUM = B.TRANS_NUM
		   and B.TRANS_NUM =  #{vo.transNum}
	</insert>
	
	<select id="getTransStatusHis" resultMap="transHIS">
	   select top 1 * from eservice.dbo.TRANS_STATUS_HISTORY where TRANS_NUM =  #{vo.transNum} order by TS_ID desc
	</select>
	<!--
		select ESERVICE.DBO.FN_DEBASE64(A.NAME)+'|'+CONVERT(varchar(10),  A.CREATE_DATE, 120)+'|'+A.TRANS_NUM+'|'+ESERVICE.DBO.FN_DEBASE64(A.MAIL)+'|'+ESERVICE.DBO.FN_DEBASE64(A.ID_NO) from
		ESERVICE.dbo.TRANS_INSURANCE_CLAIM A  where A.TRANS_NUM = #{transNum}
	-->
	<select id="getInfoTOMail" parameterType="java.lang.String" resultType="java.lang.String">
		select name+DA FROM  (
		select A.TRANS_NUM,'|'+(CONVERT(varchar(10),  A.CREATE_DATE, 120))+'|'+A.TRANS_NUM+'|'+ESERVICE.DBO.FN_DEBASE64(A.MAIL)+'|'+ESERVICE.DBO.FN_DEBASE64(A.ID_NO) DA from
		ESERVICE.dbo.TRANS_INSURANCE_CLAIM A where A.TRANS_NUM = #{transNum}
		) A1,( select A.TRANS_NUM,ESERVICE.DBO.FN_DEBASE64(A.NAME) name  from
		ESERVICE.dbo.TRANS_INSURANCE_CLAIM A where A.TRANS_NUM = #{transNum}
		) A2 where  A1.TRANS_NUM=A2.TRANS_NUM
	</select>
	
	<select id="getFileDatasDetailByClaimSeqId" resultType="hashmap" parameterType="java.lang.Float">
	select  T.FD_ID,      
			T.CLAIMS_SEQ_ID,
			T.TYPE,
		    COALESCE(( SELECT
					a.PARAMETER_NAME
				FROM
					ESERVICE_ADM.DBO.PARAMETER a
					,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
				WHERE
					a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
					AND a.STATUS = b.STATUS
					AND b.STATUS = 1
					AND a.SYSTEM_ID = b.SYSTEM_ID
					AND b.SYSTEM_ID = 'eservice'
					AND b.CATEGORY_CODE = 'INSURANCE_CLAIM_UPLOADFILE'
					AND a.PARAMETER_CODE = T.TYPE ), '')  as TYPE_NAME,
			 T.FILE_NAME,
			 T.PATH,
			 T.CREATE_DATE,
			 T.RFE_ID,
		     T.FILE_BASE64,
			 T.EZ_ACQUIRE_TASK_ID
     from ESERVICE.DBO.TRANS_INSURANCE_CLAIM_FILEDATAS T
   where T.CLAIMS_SEQ_ID = #{claimSeqId}
   order by T.CREATE_DATE asc
   </select>
   <!--獲取保單醫療文件數據-->
	<select id="getMedicalTreatmentFileDatasDetailByClaimSeqId" resultType="hashmap" parameterType="java.lang.Float">
		select  T.FD_ID,
		T.CLAIMS_SEQ_ID,
		T.TYPE,
		COALESCE(( SELECT
		a.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
		WHERE
		a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
		AND a.STATUS = b.STATUS
		AND b.STATUS = 1
		AND a.SYSTEM_ID = b.SYSTEM_ID
		AND b.SYSTEM_ID = 'eservice'
		AND b.CATEGORY_CODE = 'MEDICAL_TREATMENT_UPLOADFILE'
		AND a.PARAMETER_CODE = T.TYPE ), '')  as TYPE_NAME,
		T.FILE_NAME,
		T.PATH,
		T.CREATE_DATE,
		T.RFE_ID,
		T.FILE_BASE64,
		T.EZ_ACQUIRE_TASK_ID,
		T.FILE_STATUS+':'+
		COALESCE(( SELECT
		a.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
		WHERE
		a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID
		AND a.STATUS = b.STATUS
		AND b.STATUS = 1
		AND a.SYSTEM_ID = b.SYSTEM_ID
		AND b.SYSTEM_ID = 'eservice_api'
		AND b.CATEGORY_CODE = 'MEDICAL_INTERFACE_STATUS'
		AND a.PARAMETER_VALUE = T.FILE_STATUS ), '')  AS  FILE_STATUS
		from ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS T
		where T.CLAIMS_SEQ_ID = #{claimSeqId}
		order by T.CREATE_DATE asc
	</select>

	<!-- -->
   <select id="getMailByRocid" resultType="java.lang.String" parameterType="java.lang.String">
      select TOP 1 C.email from (
		select pmda_applicant_email email from ESERVICE.DBO.lilipm
		join eservice.dbo.lipmda_es on lipm_insu_no = (PMDA_INSU_TYPE + CONVERT(VARCHAR, PMDA_INSU_GRP_NO) + PMDA_INSU_SEQ_NO) 
		where lipm_id = #{rocId}
		union all
	   select pmda_insured_email email from ESERVICE.DBO.lilipi
       join eservice.dbo.lipmda_es on lipi_insu_no = (PMDA_INSU_TYPE + CONVERT(VARCHAR, PMDA_INSU_GRP_NO) + PMDA_INSU_SEQ_NO)
       where lipi_id = #{rocId}
       ) C
	</select>
   
   <select id="getInsClaimStatisticsReport" resultType="hashmap" parameterType="com.twfhclife.adm.model.InsClaimStatisticsVo" statementType="STATEMENT">
   select ${columnItem},count(C.ID_NO) AS COUN from (
   
	   select
	   		S.*,
	        CONVERT(varchar(100), A.CREATE_DATE, 120) AS CREATE_DATE,
			(CASE B.FROM_COMPANY_ID
						 WHEN 'L01' THEN '臺銀人壽首家'
						 ELSE '聯盟鏈轉收件' END) AS FROM_COMPANY_ID,
			B.APPLYITEM,
			COALESCE((SELECT
						a1.PARAMETER_NAME
					FROM
						ESERVICE_ADM.DBO.PARAMETER a1
						,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
					WHERE
						a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
						AND a1.STATUS = b1.STATUS
						AND b1.STATUS = 1
						AND b1.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
						AND a1.PARAMETER_CODE = A.STATUS), ' ')  AS STATUS,
			(CASE B.OTHERCOMPANYINSURED
				 WHEN 'Y' THEN '是'
				 WHEN 'N' THEN '否'
				 ELSE '' END) AS OTHERCOMPANYINSURED,
			(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1 
			  where a1.parameter_code like 'INS_ACCIDENT_%' 
			    and a1.parameter_value = B.ACCIDENT_CAUSE ) as ACCIDENT_CAUSE,
			B.TO_COMPANY_ID,
			(CASE B.FILE_RECEIVED
				 WHEN '1' THEN '是'
				 WHEN '2' THEN '否'
				 WHEN 'C' THEN '待覆核中'
				 ELSE '' END) AS FILE_RECEIVED,
			(CASE B.SEND_ALLIANCE
				 WHEN 'Y' THEN '是'
				 WHEN 'N' THEN '否'
				 WHEN 'C' THEN '待覆核中'
				 ELSE '' END) AS SEND_ALLIANCE,
		   (CASE B.SIGN_AGREE
		   WHEN 'Y' THEN '是'
		   WHEN 'N' THEN '否'
		   ELSE '' END) AS SIGN_AGREE,
			COALESCE((SELECT
						a1.PARAMETER_NAME
					FROM
						ESERVICE_ADM.DBO.PARAMETER a1
						,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
					WHERE
						a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
						AND a1.STATUS = b1.STATUS
						AND b1.STATUS = 1
						AND b1.CATEGORY_CODE = 'ABNORMAL_REASON_SUB'
						AND a1.PARAMETER_CODE = D.REJECT_REASON), ' ')  AS REJECT_REASON,
			B.POLICYNO,
	   ESERVICE.DBO.FN_DEBASE64(B.ID_NO) ID_NO
		from ESERVICE.dbo.TRANS A left join  ESERVICE.dbo.TRANS_INSURANCE_CLAIM B on  A.TRANS_NUM = B.TRANS_NUM
		     left join (select TRANS_NUM,REJECT_REASON from ESERVICE.dbo.TRANS_STATUS_HISTORY where status = '7') D
		     on A.TRANS_NUM = D.TRANS_NUM
		     left join ESERVICE.dbo.LILIPM M on M.LIPM_INSU_NO = B.POLICYNO
		     outer apply (SELECT TOP 1 SIGN_STATUS, ID_VERIFY_STATUS
					   FROM ESERVICE.DBO.BXCZ_SIGN_RECORD WHERE TRANS_NUM = A.TRANS_NUM
					   AND (ID_VERIFY_TIME IS NOT NULL OR SIGN_TIME IS NOT NULL) ORDER BY SIGN_TIME DESC, ID_VERIFY_TIME DESC) S
		where A.TRANS_TYPE = 'INSURANCE_CLAIM'     
			<if test="vo.fromCompanyId =='01'"> 
			  and  B.FROM_COMPANY_ID = 'L01'
			</if>
			<if test="vo.fromCompanyId =='02'"> 
			  and  B.FROM_COMPANY_ID != 'L01'
			</if>
			<if test="vo.applyItem != null and vo.applyItem != ''"> 
			  and  B.APPLYITEM = '${vo.applyItem}'
			</if>
			<if test="vo.policyNo != null and vo.policyNo != ''"> 
			  and  B.POLICYNO = '${vo.policyNo}'
			</if>
			<if test="vo.lilipiIdNo != null and vo.lilipiIdNo != ''"> 
			  and  B.ID_NO =   ESERVICE.DBO.FN_ENBASE64('${vo.lilipiIdNo}')
			</if>
			<if test="vo.lilipmIdNo != null and vo.lilipmIdNo != ''"> 
			  and  M.LIPM_ID = '${vo.lilipmIdNo}'
			</if>
			<if test="vo.rejectReason != null and vo.rejectReason != ''"> 
			  and  D.REJECT_REASON = '${vo.rejectReason}'
			</if>
			<if test="status !=null and status.size() &gt; 0">
		        and A.STATUS in
		        <foreach collection="status" item="item" index="index" open="(" separator="," close=")">
		          '${item}'
		        </foreach>
	
	        </if>
	        <if test="fileReceivedList !=null and fileReceivedList.size() &gt; 0">
		        and B.FILE_RECEIVED in
		        <foreach collection="fileReceivedList" item="item" index="index" open="(" separator="," close=")">
		          '${item}'
		        </foreach>
	
	        </if>
	        <if test="sendAllianceList !=null and sendAllianceList.size() &gt; 0">
		        and B.SEND_ALLIANCE in
		        <foreach collection="sendAllianceList" item="item" index="index" open="(" separator="," close=")">
		          '${item}'
		        </foreach>
	
	        </if>
	        <if test="vo.startDate != null and vo.startDate != ''">
				AND convert(varchar(10), B.CREATE_DATE, 120) <![CDATA[>=]]> '${vo.startDate}'
			</if>
			<if test="vo.endDate != null and vo.endDate != ''">
				AND convert(varchar(10), B.CREATE_DATE, 120) <![CDATA[<=]]> '${vo.endDate}'
			</if>
		   <if test="vo.signAgree != null and vo.signAgree != ''">
			   AND B.SIGN_AGREE = '${vo.signAgree}'
		   </if>
		  
		)  C
		group by ${columnItem}
	</select>

	<select id="getInsClaimDetailReport" resultType="hashmap" parameterType="com.twfhclife.adm.model.InsClaimStatisticsVo" statementType="STATEMENT">
  		 select ${columnItem} from (
			   select
					S.*,
					CONVERT(varchar(100), A.CREATE_DATE, 120) AS CREATE_DATE,
					(CASE B.FROM_COMPANY_ID
						 WHEN 'L01' THEN '臺銀人壽首家'
						 ELSE '聯盟鏈轉收件' END) AS FROM_COMPANY_ID,
					B.APPLYITEM,
					COALESCE((SELECT
								a1.PARAMETER_NAME
							FROM
								ESERVICE_ADM.DBO.PARAMETER a1
								,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
							WHERE
								a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
								AND a1.STATUS = b1.STATUS
								AND b1.STATUS = 1
								AND b1.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
								AND a1.PARAMETER_CODE = A.STATUS), ' ')  AS STATUS,
					(CASE B.FILE_RECEIVED
						 WHEN '1' THEN '是'
						 WHEN '2' THEN '否'
						 WHEN 'C' THEN '待覆核中'
						 ELSE '' END) AS FILE_RECEIVED,
					(CASE B.SEND_ALLIANCE
						 WHEN 'Y' THEN '是'
						 WHEN 'N' THEN '否'
						 WHEN 'C' THEN '待覆核中'
						 ELSE '' END) AS SEND_ALLIANCE,
					(CASE B.SIGN_AGREE
					WHEN 'Y' THEN '是'
					WHEN 'N' THEN '否'
					ELSE '' END) AS SIGN_AGREE,
					B.POLICYNO,
		ESERVICE.DBO.FN_DEBASE64(B.ID_NO) ID_NO,
					'會員本人' AS CUSTOMERNAME,
		ESERVICE.DBO.FN_DEBASE64(B.NAME) NAME,
					B.BIRDATE,
		ESERVICE.DBO.FN_DEBASE64(B.TEL) TEL,
		ESERVICE.DBO.FN_DEBASE64(B.PHONE) PHONE,
		ESERVICE.DBO.FN_DEBASE64(B.ADDRESS) ADDRESS,
					(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1 
					  where a1.parameter_code like 'WORDING_POLICYCLAIM_%' 
					    and a1.parameter_value = B.RELATION ) as RELATION,
		ESERVICE.DBO.FN_DEBASE64(B.MAIl) MAIl,
					(CASE B.OTHERCOMPANYINSURED
						 WHEN 'Y' THEN '是'
						 WHEN 'N' THEN '否'
						 ELSE '' END) AS OTHERCOMPANYINSURED,
					(CASE B.TO_COMPANY_ID
					WHEN NULL THEN '不同意'
					ELSE '同意' END) AS OTHERINSUCOMMPANY,
					B.OTHERINSUTYPE,
					B.OTHERINSUAMOUNT,
					(CASE B.OTHERINSUCLAIM        WHEN 'Y' THEN '是'        WHEN 'N' THEN '否'        ELSE '' END) AS OTHERINSUCLAIM,
					(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1 
					  where a1.parameter_code like 'INS_ACCIDENT_%' 
					    and a1.parameter_value = B.ACCIDENT_CAUSE ) as ACCIDENT_CAUSE,
					B.DISEASENAME,
					B.DIAGNOSISDATE,
					B.HOSPITAL,
					B.JOB,
					B.ACCIDENT_DATE,
					B.ACCIDENT_TIME,
					B.ACCIDENT_LOCATION,
					B.ACCIDENT_DESCR,
					(CASE B.CALLPOLICE WHEN 'Y' THEN '是' WHEN 'N' THEN '否' ELSE '' END) AS CALLPOLICE,
					B.POLICE_STATION,
		ESERVICE.DBO.FN_DEBASE64(B.POLICE_NAME) POLICE_NAME,
		ESERVICE.DBO.FN_DEBASE64(B.POLICE_PHONE) POLICE_PHONE,
					B.POLICE_DATE,
					B.POLICE_TIME,
					B.TO_COMPANY_ID,
					(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1 
					  where a1.parameter_code like 'TRANS_MDOE_%' 
					    and a1.parameter_value = B.PAYMENT_METHOD ) as PAYMENT_METHOD,
					D.FIlE_LIST,
					COALESCE((SELECT
						a1.PARAMETER_NAME
					FROM
						ESERVICE_ADM.DBO.PARAMETER a1
						,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
					WHERE
						a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
						AND a1.STATUS = b1.STATUS
						AND b1.STATUS = 1
						AND b1.CATEGORY_CODE = 'ABNORMAL_REASON'
						AND a1.PARAMETER_VALUE = E.REJECT_REASON), ' ')  AS REJECT_REASON,
					ESERVICE.DBO.FN_DEBASE64(M.LIPM_NAME_1) as LIPM_NAME_1,
					M.LIPM_ID, CONVERT(VARCHAR, B.UPLOAD_DATE, 120) UPLOAD_DATE
				from ESERVICE.dbo.TRANS A left join  ESERVICE.dbo.TRANS_INSURANCE_CLAIM B on  A.TRANS_NUM = B.TRANS_NUM
				     left join (SELECT  CLAIMS_SEQ_ID ,
								        FIlE_LIST = ( STUFF(( SELECT      FILE_NAME + '; '
								                          FROM      ESERVICE.dbo.TRANS_INSURANCE_CLAIM_FILEDATAS
								                          WHERE     CLAIMS_SEQ_ID = F.CLAIMS_SEQ_ID
								                        FOR
								                          XML PATH('')
								                        ), 1, 1, '') )
								FROM    ESERVICE.dbo.TRANS_INSURANCE_CLAIM_FILEDATAS AS F
								GROUP BY CLAIMS_SEQ_ID) D on B.CLAIMS_SEQ_ID = D.CLAIMS_SEQ_ID
				     left join (select TRANS_NUM,REJECT_REASON from ESERVICE.dbo.TRANS_STATUS_HISTORY where status = '7') E
		             on A.TRANS_NUM = E.TRANS_NUM
		             left join ESERVICE.dbo.LILIPM M on M.LIPM_INSU_NO = B.POLICYNO
					 outer apply (SELECT TOP 1 SIGN_STATUS, ID_VERIFY_STATUS, CONVERT(VARCHAR, SIGN_TIME, 120) SIGN_TIME, CONVERT(VARCHAR, ID_VERIFY_TIME, 120) ID_VERIFY_TIME, ACTION_ID
					 FROM ESERVICE.DBO.BXCZ_SIGN_RECORD WHERE TRANS_NUM = A.TRANS_NUM
								AND (ID_VERIFY_TIME IS NOT NULL OR SIGN_TIME IS NOT NULL) ORDER BY SIGN_TIME DESC, ID_VERIFY_TIME DESC) S
				where A.TRANS_TYPE = 'INSURANCE_CLAIM'
					<if test="vo.fromCompanyId =='01'"> 
					  and  B.FROM_COMPANY_ID = 'L01'
					</if>
					<if test="vo.fromCompanyId =='02'"> 
					  and  B.FROM_COMPANY_ID != 'L01'
					</if>
					<if test="vo.applyItem != null and vo.applyItem != ''"> 
					  and  B.APPLYITEM = '${vo.applyItem}'
					</if>
					<if test="vo.policyNo != null and vo.policyNo != ''"> 
					  and  B.POLICYNO = '${vo.policyNo}'
					</if>
					<if test="vo.lilipiIdNo != null and vo.lilipiIdNo != ''"> 
					  and  B.ID_NO =   ESERVICE.DBO.FN_ENBASE64('${vo.lilipiIdNo}')
					</if>
					<if test="vo.lilipmIdNo != null and vo.lilipmIdNo != ''"> 
					  and  M.LIPM_ID = '${vo.lilipmIdNo}'
					</if>
					<if test="vo.rejectReason != null and vo.rejectReason != ''"> 
					  and  E.REJECT_REASON = '${vo.rejectReason}'
					</if>
					<if test="status !=null and status.size() &gt; 0">
				        and A.STATUS in
				        <foreach collection="status" item="item" index="index" open="(" separator="," close=")">
				          '${item}'
				        </foreach>
			
			        </if>
			        <if test="fileReceivedList !=null and fileReceivedList.size() &gt; 0">
				        and B.FILE_RECEIVED in
				        <foreach collection="fileReceivedList" item="item" index="index" open="(" separator="," close=")">
				          '${item}'
				        </foreach>
			
			        </if>
			        <if test="sendAllianceList !=null and sendAllianceList.size() &gt; 0">
				        and B.SEND_ALLIANCE in
				        <foreach collection="sendAllianceList" item="item" index="index" open="(" separator="," close=")">
				          '${item}'
				        </foreach>
			
			        </if>
			        <if test="vo.startDate != null and vo.startDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[>=]]> '${vo.startDate}'
					</if>
					<if test="vo.endDate != null and vo.endDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[<=]]> '${vo.endDate}'
					</if>
					<if test="vo.applyDate != null and vo.applyDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 112) = '${vo.applyDate}' AND B.FROM_COMPANY_ID = 'L01'
					</if>
					<if test="vo.signAgree != null and vo.signAgree != ''">
						AND B.SIGN_AGREE = '${vo.signAgree}'
					</if>
				  
				)  C
	</select>
	
	<select id="getCIFromCompanyId" resultType="java.lang.String" parameterType="java.lang.String">
        select B.FROM_COMPANY_ID from ESERVICE.DBO.TRANS_CONTACT_INFO A join ESERVICE.DBO.TRANS_CONTACT_INFO_DTL B on A.ID = B.TRANS_CONTACT_ID where TRANS_NUM = #{transNum}
	</select>
	
	<select id="getDnsDetailInfo"  resultType="hashmap" parameterType="java.lang.String">
        select
		<include refid="TRANS_DNS_ALL"></include>
		from ESERVICE.dbo.TRANS_DNS A where TRANS_NUM = #{transNum}
	</select>
	
	<select id="getContactInfoStatisticsReport" resultType="hashmap" parameterType="com.twfhclife.adm.model.ContactInfoReportVo" statementType="STATEMENT">
		   select ${columnItem},count(C.IDNO) AS COUN from (
		   
			   select 
			        CONVERT(varchar(100), A.CREATE_DATE, 120) AS CREATE_DATE,
					(CASE D.FROM_COMPANY_ID WHEN 'L01' THEN '臺銀人壽首家' ELSE '聯盟鏈轉收件' END) AS FROM_COMPANY_ID,
					COALESCE((SELECT
							a1.PARAMETER_NAME
						FROM
							ESERVICE_ADM.DBO.PARAMETER a1
							,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
						WHERE
							a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
							AND a1.STATUS = b1.STATUS
							AND b1.STATUS = 1
							AND b1.CATEGORY_CODE = 'ONLINE_CHANGE'
							AND a1.PARAMETER_CODE = A.TRANS_TYPE
				         	), ' ') AS TRANS_TYPE,
						COALESCE((SELECT
								a1.PARAMETER_NAME
							FROM
								ESERVICE_ADM.DBO.PARAMETER a1
								,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
							WHERE
								a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
								AND a1.STATUS = b1.STATUS
								AND b1.STATUS = 1
								AND b1.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
								AND a1.PARAMETER_CODE = A.STATUS), ' ')  AS STATUS,
					(CASE D.SEND_ALLIANCE
						 WHEN 'Y' THEN '是'
						 WHEN 'N' THEN '否'
						 ELSE '' END) AS SEND_ALLIANCE,
					E.LIPM_ID IDNO
				from ESERVICE.dbo.TRANS A 
				     JOIN ESERVICE.dbo.TRANS_CONTACT_INFO B on  A.TRANS_NUM = B.TRANS_NUM
				     JOIN ESERVICE.DBO.TRANS_POLICY C on B.TRANS_NUM = C.TRANS_NUM
					 JOIN ESERVICE.DBO.TRANS_CONTACT_INFO_DTL  D on D.TRANS_CONTACT_ID = B.ID
				     JOIN ESERVICE.DBO.LILIPM E ON C.POLICY_NO = E.LIPM_INSU_NO

				where A.TRANS_TYPE = 'CONTACT_INFO'       
					<if test="vo.fromCompanyId =='01'"> 
					  and  D.FROM_COMPANY_ID = 'L01'
					</if>
					<if test="vo.fromCompanyId =='02'"> 
					  and  D.FROM_COMPANY_ID != 'L01'
					</if>
					<if test="vo.policyNo != null and vo.policyNo != ''"> 
					  and  C.POLICY_NO = '${vo.policyNo}'
					</if>
					<if test="vo.lilipiIdNo != null and vo.lilipiIdNo != ''">
						and   E.LIPM_INSU_NO = '${vo.lilipiIdNo}'
					</if>
					<if test="vo.lilipmIdNo != null and vo.lilipmIdNo != ''"> 
					  and  E.LIPM_ID = '${vo.lilipmIdNo}'
					</if>
					<if test="status !=null and status.size() &gt; 0">
				        and A.STATUS in
				        <foreach collection="status" item="item" index="index" open="(" separator="," close=")">
				          '${item}'
				        </foreach>
			
			        </if>
			        <if test="companyList !=null and companyList.size() &gt; 0">
				        <foreach collection="companyList" item="item" index="index" open="" separator="" close="">
				         and  D.TO_COMPANY_ID like  '%${item}%'
				        </foreach>
			        </if>
			       <if test="vo.sendAlliance  !=null and vo.sendAlliance  != '' "> 
					  and  D.SEND_ALLIANCE = '${vo.sendAlliance}'
					</if>
			        <if test="vo.startDate != null and vo.startDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[>=]]> '${vo.startDate}'
					</if>
					<if test="vo.endDate != null and vo.endDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[<=]]> '${vo.endDate}'
					</if>
				  
				)  C
				group by ${columnItem}
	</select>
	
	<select id="getContactInfoDetailReport" resultType="hashmap" parameterType="com.twfhclife.adm.model.ContactInfoReportVo" statementType="STATEMENT">
		   select ${columnItem} from (
		   
			  select 
			        CONVERT(varchar(100), A.CREATE_DATE, 120) AS CREATE_DATE,
					(CASE D.FROM_COMPANY_ID WHEN 'L01' THEN '臺銀人壽首家' ELSE '聯盟鏈轉收件' END) AS FROM_COMPANY_ID,
					COALESCE((SELECT
							a1.PARAMETER_NAME
						FROM
							ESERVICE_ADM.DBO.PARAMETER a1
							,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
						WHERE
							a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
							AND a1.STATUS = b1.STATUS
							AND b1.STATUS = 1
							AND b1.CATEGORY_CODE = 'ONLINE_CHANGE'
							AND a1.PARAMETER_CODE = A.TRANS_TYPE
				         	), ' ') AS TRANS_TYPE,
					COALESCE((SELECT
							a1.PARAMETER_NAME
						FROM
							ESERVICE_ADM.DBO.PARAMETER a1
							,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
						WHERE
							a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
							AND a1.STATUS = b1.STATUS
							AND b1.STATUS = 1
							AND b1.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
							AND a1.PARAMETER_CODE = A.STATUS), ' ')  AS STATUS,
					(CASE D.SEND_ALLIANCE
						 WHEN 'Y' THEN '是'
						 WHEN 'N' THEN '否'
						 ELSE '' END) AS SEND_ALLIANCE,
					C.POLICY_NO,
					D.TO_COMPANY_ID,
					ESERVICE.DBO.FN_DEBASE64(COALESCE(E.LIPM_NAME_1,'')) AS NAME, 
					E.LIPM_ID IDNO,
					ESERVICE.DBO.FN_DEBASE64(D.TEL_HOME) TEL_HOME,
					(REPLACE(ESERVICE.DBO.FN_DEBASE64(D.TEL_OFFICE) Collate Database_Default,'#','EXT')) TEL_OFFICE,
					ESERVICE.DBO.FN_DEBASE64(D.MOBILE) MOBILE,
					ESERVICE.DBO.FN_DEBASE64(D.EMAIL) EMAIL,
					ESERVICE.DBO.FN_DEBASE64(D.ADDRESS_FULL) ADDRESS, 
					ESERVICE.DBO.FN_DEBASE64(D.ADDRESS_FULL_CHARGE) ADDRESS_CHAR,
					ESERVICE.DBO.FN_DEBASE64(G.TEL_HOME) TEL_HOME_O,
					(REPLACE(ESERVICE.DBO.FN_DEBASE64(G.TEL_OFFICE) Collate Database_Default,'#','EXT')) TEL_OFFICE_O,
					ESERVICE.DBO.FN_DEBASE64(G.MOBILE) MOBILE_O, 
					ESERVICE.DBO.FN_DEBASE64(G.EMAIL) EMAIL_O,
					ESERVICE.DBO.FN_DEBASE64(G.ADDRESS_FULL) ADDRESS_O, 
					ESERVICE.DBO.FN_DEBASE64(G.ADDRESS_FULL_CHARGE) ADDRESS_CHAR_O
				from ESERVICE.dbo.TRANS A 
				     JOIN ESERVICE.dbo.TRANS_CONTACT_INFO B ON  A.TRANS_NUM = B.TRANS_NUM
				     JOIN ESERVICE.DBO.TRANS_POLICY C ON B.TRANS_NUM = C.TRANS_NUM
					 JOIN ESERVICE.DBO.TRANS_CONTACT_INFO_DTL  D ON D.TRANS_CONTACT_ID = B.ID
				     JOIN ESERVICE.DBO.LILIPM E ON C.POLICY_NO = E.LIPM_INSU_NO
				     JOIN ESERVICE.DBO.TRANS_CONTACT_INFO_OLD G ON G.TRANS_CONTACT_ID = B.ID
				where A.TRANS_TYPE = 'CONTACT_INFO'     
					<if test="vo.fromCompanyId =='01'"> 
					  and  D.FROM_COMPANY_ID = 'L01'
					</if>
					<if test="vo.fromCompanyId =='02'"> 
					  and  D.FROM_COMPANY_ID != 'L01'
					</if>
					<if test="vo.policyNo != null and vo.policyNo != ''"> 
					  and  C.POLICY_NO = '${vo.policyNo}'
					</if>
					<if test="vo.lilipiIdNo != null and vo.lilipiIdNo != ''">
					  and  E.LIPM_INSU_NO= '${vo.lilipiIdNo}'
					</if>
					<if test="vo.lilipmIdNo != null and vo.lilipmIdNo != ''"> 
					  and  E.LIPM_ID = '${vo.lilipmIdNo}'
					</if>
					<if test="status !=null and status.size() &gt; 0">
				        and A.STATUS in
				        <foreach collection="status" item="item" index="index" open="(" separator="," close=")">
				          '${item}'
				        </foreach>
			
			        </if>
			        <if test="companyList !=null and companyList.size() &gt; 0">
				        
				        <foreach collection="companyList" item="item" index="index" open="" separator="" close="">
				         and D.TO_COMPANY_ID like '%${item}%'
				        </foreach>
			        </if>
			       <if test="vo.sendAlliance  !=null and vo.sendAlliance  != '' "> 
					  and  D.SEND_ALLIANCE = '${vo.sendAlliance}'
					</if>
			        <if test="vo.startDate != null and vo.startDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[>=]]> '${vo.startDate}'
					</if>
					<if test="vo.endDate != null and vo.endDate != ''">
						AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[<=]]> '${vo.endDate}'
					</if>
				  
				)  C
	</select>
	
	<select id="getMedicalTreatmentDetailReport" resultType="hashmap" parameterType="com.twfhclife.adm.model.MedicalTreatmentStatisticsVo" statementType="STATEMENT">
		select ${columnItem} from (
		select
		S.*,
		CONVERT(varchar(100), A.CREATE_DATE, 120) AS CREATE_DATE,
		(CASE B.FROM_COMPANY_ID
		WHEN 'L01' THEN '臺銀人壽首家'
		ELSE '聯盟鏈轉收件' END) AS FROM_COMPANY_ID,
		(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'APPLICATION_ITEMS_%'
		and a1.parameter_value = B.APPLYITEM ) as APPLYITEM,
		COALESCE((SELECT
		a1.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a1
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
		WHERE
		a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
		AND a1.STATUS = b1.STATUS
		AND b1.STATUS = 1
		AND b1.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
		AND a1.PARAMETER_CODE = A.STATUS), ' ')  AS STATUS,
		(CASE B.FILE_RECEIVED
		WHEN '1' THEN '是'
		WHEN '2' THEN '否'
		WHEN 'C' THEN '待覆核中'
		ELSE '' END) AS FILE_RECEIVED,
		(CASE B.SEND_ALLIANCE
		WHEN 'Y' THEN '是'
		WHEN 'N' THEN '否'
		WHEN 'C' THEN '待覆核中'
		ELSE '' END) AS SEND_ALLIANCE,
		(CASE B.SIGN_AGREE
		WHEN 'Y' THEN '是'
		WHEN 'N' THEN '否'
		ELSE '' END) AS SIGN_AGREE,
		B.POLICYNO,
		ESERVICE.DBO.FN_DEBASE64(B.ID_NO) ID_NO,
		'會員本人' AS CUSTOMERNAME,
		ESERVICE.DBO.FN_DEBASE64(B.NAME) NAME,
		cast(ESERVICE.DBO.FN_DEBASE64(B.BIRDATE) as date) AS  BIRDATE,
		ESERVICE.DBO.FN_DEBASE64(B.TEL) TEL,
		ESERVICE.DBO.FN_DEBASE64(B.PHONE) PHONE,
		ESERVICE.DBO.FN_DEBASE64(B.ADDRESS) ADDRESS,
		(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'WORDING_POLICYCLAIM_%'
		and a1.parameter_value = B.RELATION ) as RELATION,
		ESERVICE.DBO.FN_DEBASE64(B.MAIl) MAIl,
		(CASE B.OTHERCOMPANYINSURED
		WHEN 'Y' THEN '是'
		WHEN 'N' THEN '否'
		ELSE '' END) AS OTHERCOMPANYINSURED,
		(CASE B.TO_COMPANY_ID
		WHEN NULL THEN '不同意'
		ELSE '同意' END) AS OTHERINSUCOMMPANY,
		B.OTHERINSUTYPE,
		B.OTHERINSUAMOUNT,
		(CASE B.OTHERINSUCLAIM        WHEN 'Y' THEN '是'        WHEN 'N' THEN '否'        ELSE '' END) AS OTHERINSUCLAIM,
		(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'INS_ACCIDENT_%'
		and a1.parameter_value = B.ACCIDENT_CAUSE ) as ACCIDENT_CAUSE,
		B.DISEASENAME,
		cast(B.DIAGNOSISDATE as date) AS  DIAGNOSISDATE,
		B.HOSPITAL,
		B.JOB,
		cast(B.ACCIDENT_DATE as date) AS  ACCIDENT_DATE,
		B.ACCIDENT_TIME,
		B.ACCIDENT_LOCATION,
		B.ACCIDENT_DESCR,
		(CASE B.CALLPOLICE WHEN 'Y' THEN '是' WHEN 'N' THEN '否' ELSE '' END) AS CALLPOLICE,
		B.POLICE_STATION,
		ESERVICE.DBO.FN_DEBASE64(B.POLICE_NAME) POLICE_NAME,
		ESERVICE.DBO.FN_DEBASE64(B.POLICE_PHONE) POLICE_PHONE,
		cast(B.POLICE_DATE as date) AS  POLICE_DATE,
		B.POLICE_TIME,
		B.TO_COMPANY_ID,
		B.TO_HOSPITAL_ID,
		(CASE B.FROM_HOSPITAL_ID WHEN 'Y' THEN '是' WHEN 'N' THEN '否' ELSE '' END) AS FROM_HOSPITAL_ID,
		(select B.ALLIANCE_STATUS+'('+a1.parameter_name+')' from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'MEDICAL_INTERFACE_STATUS_%' and a1.parameter_value = B.ALLIANCE_STATUS ) ALLIANCE_STATUS,
		(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'TRANS_MDOE_%'
		and a1.parameter_value = B.PAYMENT_METHOD ) as PAYMENT_METHOD,
		D.FIlE_LIST,
		COALESCE((SELECT
		a1.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a1
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
		WHERE
		a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
		AND a1.STATUS = b1.STATUS
		AND b1.STATUS = 1
		AND b1.CATEGORY_CODE = 'ABNORMAL_REASON'
		AND a1.PARAMETER_VALUE = E.REJECT_REASON), ' ')  AS REJECT_REASON,
		ESERVICE.DBO.FN_DEBASE64(M.LIPM_NAME_1) as LIPM_NAME_1,
		M.LIPM_ID, CONVERT(VARCHAR, B.UPLOAD_DATE, 120) UPLOAD_DATE
		from ESERVICE.dbo.TRANS A left join  ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM B on  A.TRANS_NUM = B.TRANS_NUM
		left join (SELECT  CLAIMS_SEQ_ID ,
		FIlE_LIST = ( STUFF(( SELECT      FILE_NAME + '; '
		FROM      ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS
		WHERE     CLAIMS_SEQ_ID = F.CLAIMS_SEQ_ID
		FOR
		XML PATH('')
		), 1, 1, '') )
		FROM  ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS AS F
		GROUP BY CLAIMS_SEQ_ID) D on B.CLAIMS_SEQ_ID = D.CLAIMS_SEQ_ID
		left join (select TRANS_NUM,REJECT_REASON from ESERVICE.dbo.TRANS_STATUS_HISTORY where status = '7') E
		on A.TRANS_NUM = E.TRANS_NUM
		left join ESERVICE.dbo.LILIPM M on M.LIPM_INSU_NO = B.POLICYNO
		outer apply (SELECT TOP 1 SIGN_STATUS, ID_VERIFY_STATUS, CONVERT(VARCHAR, SIGN_TIME, 120) SIGN_TIME, CONVERT(VARCHAR, ID_VERIFY_TIME, 120) ID_VERIFY_TIME, ACTION_ID
					FROM ESERVICE.DBO.BXCZ_SIGN_RECORD WHERE TRANS_NUM = A.TRANS_NUM
					AND (ID_VERIFY_TIME IS NOT NULL OR SIGN_TIME IS NOT NULL) ORDER BY SIGN_TIME DESC, ID_VERIFY_TIME DESC) S
		where A.TRANS_TYPE = 'MEDICAL_TREATMENT'
		<if test="vo.fromCompanyId =='01'">
			and  B.FROM_COMPANY_ID = 'L01'
		</if>
		<if test="vo.fromCompanyId =='02'">
			and  B.FROM_COMPANY_ID != 'L01'
		</if>
		<if test="vo.applyItem != null and vo.applyItem != ''">
			and  B.APPLYITEM = '${vo.applyItem}'
		</if>
		<if test="vo.policyNo != null and vo.policyNo != ''">
			and  B.POLICYNO = '${vo.policyNo}'
		</if>
		<if test="vo.lilipiIdNo != null and vo.lilipiIdNo != ''">
			and  B.ID_NO =   ESERVICE.DBO.FN_ENBASE64('${vo.lilipiIdNo}')
		</if>
		<if test="vo.lilipmIdNo != null and vo.lilipmIdNo != ''">
			and  M.LIPM_ID = '${vo.lilipmIdNo}'
		</if>
		<if test="vo.rejectReason != null and vo.rejectReason != ''">
			and  E.REJECT_REASON = '${vo.rejectReason}'
		</if>
		<if test="vo.allianceStatusList !=null and vo.allianceStatusList.size() &gt; 0">
			and B.ALLIANCE_STATUS in
			<foreach collection="vo.allianceStatusList" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="status !=null and status.size() &gt; 0">
			and A.STATUS in
			<foreach collection="status" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>
		</if>
		<if test="fileReceivedList !=null and fileReceivedList.size() &gt; 0">
			and B.FILE_RECEIVED in
			<foreach collection="fileReceivedList" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="sendAllianceList !=null and sendAllianceList.size() &gt; 0">
			and B.SEND_ALLIANCE in
			<foreach collection="sendAllianceList" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="vo.startDate != null and vo.startDate != ''">
			AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[>=]]> '${vo.startDate}'
		</if>
		<if test="vo.endDate != null and vo.endDate != ''">
			AND convert(varchar(10), A.CREATE_DATE, 120) <![CDATA[<=]]> '${vo.endDate}'
		</if>
		<if test="vo.applyDate != null and vo.applyDate != ''">
			AND convert(varchar(10), A.CREATE_DATE, 112) = '${vo.applyDate}' AND B.FROM_COMPANY_ID = 'L01'
		</if>
		<if test="vo.signAgree != null and vo.signAgree != ''">
			AND B.SIGN_AGREE = '${vo.signAgree}'
		</if>

		)  C
	</select>


	<select id="getMedicalTreatmentStatisticsReport" resultType="hashmap" parameterType="com.twfhclife.adm.model.MedicalTreatmentStatisticsVo" statementType="STATEMENT">
		select ${columnItem},count(C.ID_NO) AS COUN from (

		select
		S.*,
		CONVERT(varchar(100), A.CREATE_DATE, 120) AS CREATE_DATE,
		(CASE B.FROM_COMPANY_ID
		WHEN 'L01' THEN '臺銀人壽首家'
		ELSE '聯盟鏈轉收件' END) AS FROM_COMPANY_ID,
		B.APPLYITEM,
		COALESCE((SELECT
		a1.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a1
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
		WHERE
		a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
		AND a1.STATUS = b1.STATUS
		AND b1.STATUS = 1
		AND b1.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS'
		AND a1.PARAMETER_CODE = A.STATUS), ' ')  AS STATUS,
		(CASE B.OTHERCOMPANYINSURED
		WHEN 'Y' THEN '是'
		WHEN 'N' THEN '否'
		ELSE '' END) AS OTHERCOMPANYINSURED,
		(select a1.parameter_name from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'INS_ACCIDENT_%'
		and a1.parameter_value = B.ACCIDENT_CAUSE ) as ACCIDENT_CAUSE,
		(CASE WHEN   B.TO_COMPANY_ID is null THEN '否'  WHEN   B.TO_COMPANY_ID ='' THEN '否' WHEN  B.TO_COMPANY_ID is not null THEN '是' ELSE '' END) AS TO_COMPANY_ID,
		(CASE B.FROM_HOSPITAL_ID WHEN 'Y' THEN '是' WHEN 'N' THEN '否' ELSE '' END) AS FROM_HOSPITAL_ID,
		(select B.ALLIANCE_STATUS+'('+a1.parameter_name+')' from ESERVICE_ADM.DBO.PARAMETER a1
		where a1.parameter_code like 'MEDICAL_INTERFACE_STATUS_%' and a1.parameter_value = B.ALLIANCE_STATUS ) ALLIANCE_STATUS,
		(CASE B.FILE_RECEIVED
		WHEN '1' THEN '是'
		WHEN '2' THEN '否'
		WHEN 'C' THEN '待覆核中'
		ELSE '' END) AS FILE_RECEIVED,
		(CASE B.SEND_ALLIANCE
		WHEN 'Y' THEN '是'
		WHEN 'N' THEN '否'
		WHEN 'C' THEN '待覆核中'
		ELSE '' END) AS SEND_ALLIANCE,
		(CASE B.SIGN_AGREE
		WHEN 'Y' THEN '是'
		WHEN 'N' THEN '否'
		ELSE '' END) AS SIGN_AGREE,
		D.PARAMETER_NAME  AS REJECT_REASON,
		B.POLICYNO,
		ESERVICE.DBO.FN_DEBASE64(B.ID_NO) ID_NO
		from ESERVICE.dbo.TRANS A left join  ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM B on  A.TRANS_NUM = B.TRANS_NUM
		left join (
			select TRANS_NUM,REJECT_REASON,PA.PARAMETER_NAME from ESERVICE.dbo.TRANS_STATUS_HISTORY  TS
			inner join (
			SELECT
			a1.PARAMETER_CODE,a1.PARAMETER_NAME
		FROM
		ESERVICE_ADM.DBO.PARAMETER a1
		,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
		WHERE
		a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
		AND a1.STATUS = b1.STATUS
		AND b1.STATUS = 1
		AND b1.CATEGORY_CODE = 'ABNORMAL_REASON_SUB'
			) PA
			ON  TS.status = '7' AND PA.PARAMETER_CODE = TS.REJECT_REASON
		) D
		on A.TRANS_NUM = D.TRANS_NUM
		left join ESERVICE.dbo.LILIPM M on M.LIPM_INSU_NO = B.POLICYNO
		outer apply (SELECT TOP 1 SIGN_STATUS, ID_VERIFY_STATUS
					FROM ESERVICE.DBO.BXCZ_SIGN_RECORD WHERE TRANS_NUM = A.TRANS_NUM
					AND (ID_VERIFY_TIME IS NOT NULL OR SIGN_TIME IS NOT NULL) ORDER BY SIGN_TIME DESC, ID_VERIFY_TIME DESC) S
		where A.TRANS_TYPE = 'MEDICAL_TREATMENT'
		<if test="vo.fromCompanyId =='01'">
			and  B.FROM_COMPANY_ID = 'L01'
		</if>
		<if test="vo.fromCompanyId =='02'">
			and  B.FROM_COMPANY_ID != 'L01'
		</if>
		<if test="vo.applyItem != null and vo.applyItem != ''">
			and  B.APPLYITEM = '${vo.applyItem}'
		</if>
		<if test="vo.policyNo != null and vo.policyNo != ''">
			and  B.POLICYNO = '${vo.policyNo}'
		</if>
		<if test="vo.lilipiIdNo != null and vo.lilipiIdNo != ''">
			and  B.ID_NO =   ESERVICE.DBO.FN_ENBASE64('${vo.lilipiIdNo}')
		</if>
		<if test="vo.lilipmIdNo != null and vo.lilipmIdNo != ''">
			and  M.LIPM_ID = '${vo.lilipmIdNo}'
		</if>
		<if test="vo.rejectReason != null and vo.rejectReason != ''">
			and  D.REJECT_REASON = '${vo.rejectReason}'
		</if>
		<if test="status !=null and status.size() &gt; 0">
			and A.STATUS in
			<foreach collection="status" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="fileReceivedList !=null and fileReceivedList.size() &gt; 0">
			and B.FILE_RECEIVED in
			<foreach collection="fileReceivedList" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="sendAllianceList !=null and sendAllianceList.size() &gt; 0">
			and B.SEND_ALLIANCE in
			<foreach collection="sendAllianceList" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="vo.allianceStatusList !=null and vo.allianceStatusList.size() &gt; 0">
			and B.ALLIANCE_STATUS in
			<foreach collection="vo.allianceStatusList" item="item" index="index" open="(" separator="," close=")">
				'${item}'
			</foreach>

		</if>
		<if test="vo.startDate != null and vo.startDate != ''">
			AND convert(varchar(10), B.CREATE_DATE, 120) <![CDATA[>=]]> '${vo.startDate}'
		</if>
		<if test="vo.endDate != null and vo.endDate != ''">
			AND convert(varchar(10), B.CREATE_DATE, 120) <![CDATA[<=]]> '${vo.endDate}'
		</if>
		<if test="vo.signAgree != null and vo.signAgree != ''">
			AND B.SIGN_AGREE = '${vo.signAgree}'
		</if>

		)  C
		group by ${columnItem}
	</select>
	
	<!--查詢當前功能的醫院,是API407存儲的-->
	<select id="getHospitalList" resultMap="hospitalResultMap" parameterType="java.lang.String">
			select A.ID , A.HP_ID, A.HP_NAME, A.FUNCTION_NAME, B.ID SUB_ID, B.SUB_HP_NAME, B.SUB_HP_ID
			from ESERVICE.DBO.HOSPITAL A LEFT JOIN
			ESERVICE.DBO.SUB_HOSPITAL B ON A.HP_ID = B.HP_ID
			where A.FUNCTION_NAME =#{functionName}
	</select>
	<!--查詢當前功能的保險公司,是API408存儲的-->
	<select id="getHospitalInsuranceCompanyList" resultMap="hospitalInsuranceCompanyResultMap"  parameterType="java.lang.String">
		select 	ID,INSURANCE_ID,INSURANCE_NAME,FUNCTION_NAME
		from ESERVICE.DBO.HOSPITAL_INSURANCE_COMPANY
		where FUNCTION_NAME = #{functionName}
	</select>

	<!--查詢醫療保單是否存在異常案件	-->
	<select id="getMedicalTreatmentCaseIDNum" resultType="java.lang.Integer" parameterType="java.lang.String">
		select COUNT(*) from
		ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM TMT
		left  join   ESERVICE.DBO.TRANS T   ON TMT.TRANS_NUM=T.TRANS_NUM
		where TMT.TRANS_NUM = #{transNum} and T.STATUS='7C' and TMT.CASE_ID IS NOT NULL
	</select>
	
	<!--醫療保單查詢是否存在黑名单-->
	<select id="checkMedicalTreatmentIdNoExist" resultType="java.lang.Integer" parameterType="java.lang.String">
		select COUNT(A.ID_NO) from ESERVICE_ADM.DBO.BLACK_LIST A,ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM  B
		where A.ID_NO = ESERVICE.DBO.FN_DEBASE64(B.ID_NO) and B.TRANS_NUM = #{transNum}
	</select>
	
	<!--查詢申請明細-已持有投資標的轉換查詢-->
	<select id="getConversionDetail" resultMap="transFundConversion"  parameterType="com.twfhclife.adm.model.TransVo">
		SELECT TF.INVT_NO INVT_NO,  PP.INVT_NAME INVT_NAME,F.FUND_NAME,  TF.INVESTMENT_TYPE INVESTMENT_TYPE,TF.RATIO RATIO,TF.VALUE VALUE
		,TF.SWIFT_CODE,TF.ENGLISH_NAME,TF.BANK_CODE,TF.BRANCH_CODE,TF.ACCOUNT_NAME,TF.BANK_ACCOUNT,TF.BANK_NAME,TF.BRANCH_NAME
		FROM ESERVICE.dbo.TRANS_FUND_CONVERSION TF LEFT JOIN
		ESERVICE.dbo.POLICY_PORTFOLIO PP ON TF.POLICY_NO = PP.POLICY_NO AND TF.INVT_NO = PP.INVT_NO
		LEFT JOIN    ESERVICE.DBO.FUND   F  ON   TF.INVT_NO = F.FUND_CODE
		WHERE TF.TRANS_NUM =#{transVo.transNum}
	</select>
	<!--查詢申請保單的基本明細-->
	<select id="getOnlineChangeDetailByTransNum" parameterType="string" resultType="map">
			SELECT ROW_NUMBER() OVER (ORDER BY CREATE_DATE) AS ROW_NUM ,A.*
			FROM (
			SELECT T.TRANS_NUM ,T.TRANS_DATE ,T.TRANS_TYPE ,
			COALESCE((
			SELECT a.PARAMETER_NAME FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b
			WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS AND b.STATUS = 1 AND b.CATEGORY_CODE = 'ONLINE_CHANGE' AND a.PARAMETER_CODE = T.TRANS_TYPE
			), ' ') AS TRANS_TYPE_NAME
			,T.STATUS
			,COALESCE((
			SELECT a.PARAMETER_NAME FROM ESERVICE_ADM.DBO.PARAMETER a ,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b WHERE a.PARAMETER_CATEGORY_ID = b.PARAMETER_CATEGORY_ID AND a.STATUS = b.STATUS AND b.STATUS = 1 AND b.CATEGORY_CODE = 'ONLINE_CHANGE_STATUS' AND a.PARAMETER_CODE = T.STATUS
			), ' ') AS STATUS_NAME
			,T.CREATE_DATE
			,U.ROC_ID
			,F.POLICY_NO
			FROM
			ESERVICE.DBO.TRANS T LEFT JOIN ESERVICE.DBO.USERS U ON T.USER_ID = U.USER_ID
			LEFT JOIN ESERVICE.DBO.TRANS_POLICY F ON T.TRANS_NUM = F.TRANS_NUM
			) A    WHERE A.TRANS_NUM=#{transNum}
	</select>

	<select id="selectCompareInvestments" resultType="map">
		SELECT TI.INVT_NO invtNo, TI.DISTRIBUTION_RATIO afterRatio, TI.PRE_DISTRIBUTION_RATIO preRatio, TI.INVT_NAME invtName,
		SWIFT_CODE swiftCode, ENGLISH_NAME englishName, BANK_CODE bankCode, BRANCH_CODE branchCode, ACCOUNT_NAME accountName, BANK_ACCOUNT bankAccount, BANK_NAME bankName, BRANCH_NAME branchName
		FROM ESERVICE.dbo.TRANS_INVESTMENT TI
		WHERE TI.TRANS_NUM = #{transVo.transNum}
	</select>

	<!--醫療保單加入黑名單	-->
	<insert id="addMedicalTreatmentBlackList" parameterType="com.twfhclife.adm.model.BlackListVo">
		INSERT INTO ESERVICE_ADM.DBO.BLACK_LIST
		(BL_ID,TRANS_NUM,TRANS_TYPE,ID_NO,CREATE_DATE)
		select
		(NEXT VALUE FOR ESERVICE_ADM.DBO.BLACK_LIST_SEQ),
		B.TRANS_NUM,
		A.TRANS_TYPE,
		ESERVICE.DBO.FN_DEBASE64(B.ID_NO),
		getDate()
		from ESERVICE.DBO.TRANS A,ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM B
		where A.TRANS_NUM = B.TRANS_NUM
		and B.TRANS_NUM =  #{vo.transNum}
	</insert>

	<!--	查詢當前醫療保單的名稱\郵件-->
	<select id="getInfoMedicalTreatmentTOMail" parameterType="java.lang.String" resultType="java.lang.String">
		select name+DA FROM  (
		select A.TRANS_NUM,'|'+(CONVERT(varchar(10),  A.CREATE_DATE, 120))+'|'+A.TRANS_NUM+'|'+ESERVICE.DBO.FN_DEBASE64(A.MAIL)+'|'+ESERVICE.DBO.FN_DEBASE64(A.ID_NO) DA from
		ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM A where A.TRANS_NUM = #{transNum}
		) A1,( select A.TRANS_NUM,ESERVICE.DBO.FN_DEBASE64(A.NAME) name  from
		ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM A where A.TRANS_NUM = #{transNum}
		) A2 where  A1.TRANS_NUM=A2.TRANS_NUM
	</select>

	<!-- 取得醫療查詢結果(總筆數) -->
	<select id="getOnlineChangeMedicalTreatmentDetailTotal" resultType="int">
		SELECT
		COUNT(1) AS AMOUNT
		FROM (
		<include refid="MEDICAL01" />
		) t
	</select>

	<!-- 取得線上申請醫療查詢結果(分頁) -->
	<select id="getOnlineChangeMedicalTreatmentDetail" resultType="hashmap">
		SELECT
		*
		FROM (
		SELECT
		ROW_NUMBER() OVER (ORDER BY CREATE_DATE) AS ROW_NUM
		,A.*
		FROM (
		<include refid="MEDICAL02" />
		) A
		) B
		WHERE
		B.ROW_NUM <![CDATA[<=]]> (#{transVo.start} + #{transVo.length})
		AND B.ROW_NUM <![CDATA[>]]> #{transVo.start}
	</select>

	<!-- 取得醫療文件圖片數據 -->
	<select id="getMedicalTreatmentDetailBase64" resultMap="medicalTreatmentClaimFileDataResultMap" parameterType="float">
		select B.CLAIMS_SEQ_ID,B.TYPE,B.PATH,B.FILE_NAME,B.FILE_BASE64
		from ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM_FILEDATAS B
		where B.FD_ID  =  #{fdId}
	</select>

	<!-- 取得醫療文件圖片數據 -->
	<select id="getMedicalInfoDetailBase64" resultMap="medicalTreatmentClaimFileDataResultMap" parameterType="float">
		select B.CLAIMS_SEQ_ID,B.OTYPE,B.FILE_NAME,B.FILE_BASE64
		from ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM_MEDICALINFO B
		where B.FILE_ID = #{fdId}
	</select>

	<select id="getMedicalTreatmentFromCompanyId" parameterType="string" resultType="string">
		select B.FROM_COMPANY_ID FROM_COMPANY_ID
		from ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM B
		where B.TRANS_NUM= #{trans_num}
	</select>

<!-- 更新保單醫療傳送聯盟鏈狀態 -->
	<update id="updateMedicalTreatmentSendAlliance" parameterType="com.twfhclife.adm.model.TransMedicalTreatmentClaimVo">
		UPDATE
		ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM
		SET
		SEND_ALLIANCE = #{vo.sendAlliance,jdbcType=VARCHAR}
		<if test="date != null">
			, SEND_ALLIANCE_DATE = #{date}
		</if>
		WHERE
		TRANS_NUM = #{vo.transNum,jdbcType=VARCHAR}
	</update>
	<update id="updateTarnsMedicalTreatmentClaimToAllianceStatus"  parameterType="com.twfhclife.adm.model.TransMedicalTreatmentClaimVo">
		update ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM
		set
		ALLIANCE_STATUS = #{vo.allianceStatus},
		ALLIANCE_FILE_STATUS = #{vo.allianceFileStatus}
		where CASE_ID = #{vo.caseId}
	</update>
	<select id="getTransMedicalTreatmentByTransNum" resultMap="TransMedicalTreatmentClaimResultMap" parameterType="java.lang.String">
		select
		<include refid="MEDICAL_TREATMENT_CLAIM_ALL"></include>
		from ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM A
		where A.TRANS_NUM = #{transNum}
		order by A.CREATE_DATE desc
	</select>
	<select id="getMedicalTreatmentClaimSequence" resultType="float">
		select NEXT VALUE for ESERVICE.DBO.MEDICAL_TREATMENT_CLAIM_SEQ as CLAIMS_SEQ_ID;
	</select>
	<select id="getTransMedicalTreatmentByAllianceStatus" resultType="java.lang.String">
		SELECT ALLIANCE_STATUS
		FROM [ESERVICE].[dbo].[TRANS_MEDICAL_TREATMENT_CLAIM] where TRANS_NUM=#{transNum}
	</select>
	<select id="getTransMedicalTreatmentByCount" resultType="java.lang.Integer">
		SELECT  COUNT(MI_ID)
		FROM [ESERVICE].[dbo].[TRANS_MEDICAL_TREATMENT_CLAIM_MEDICALINFO] TMF INNER  JOIN
		[ESERVICE].[dbo].[TRANS_MEDICAL_TREATMENT_CLAIM] TM  ON  TMF.CLAIMS_SEQ_ID=TM.CLAIMS_SEQ_ID
		WHERE TRANS_NUM=#{transNum}
	</select>
	<select id="getTransMedicalTreatmentBySuccessCount" resultType="java.lang.Integer">
		SELECT  COUNT(MI_ID)
		FROM [ESERVICE].[dbo].[TRANS_MEDICAL_TREATMENT_CLAIM_MEDICALINFO] TMF INNER  JOIN
		[ESERVICE].[dbo].[TRANS_MEDICAL_TREATMENT_CLAIM] TM  ON  TMF.CLAIMS_SEQ_ID=TM.CLAIMS_SEQ_ID
		WHERE   TMF.FILE_BASE64 IS NOT NULL AND  TMF.FILE_BASE64 !='' AND  TMF.EZ_ACQUIRE_TASK_ID IS NOT  NULL   AND  TMF.EZ_ACQUIRE_TASK_ID !='' AND TRANS_NUM=#{transNum}
	</select>
	<select id="getTransMedicalTreatmentByCaseId" resultType="java.lang.String">
		SELECT TOP 1 CASE_ID
		FROM [ESERVICE].[dbo].[TRANS_MEDICAL_TREATMENT_CLAIM]
		WHERE   TRANS_NUM=#{transNum}
	</select>
	<select id="getUnionCourseListAllianceStatusMsg"
			resultType="com.twfhclife.adm.model.NotifyOfNewCaseMedicalVo"
				parameterType="com.twfhclife.adm.model.NotifyOfNewCaseMedicalVo">
				SELECT
				[SEQ_ID]
				,[CASE_ID]
				,[TYPE]
				,[CREATE_DATE]
				,[NC_STATUS]
				,[STATUS_DATE]
				,[MSG]
				,COALESCE(CASE_STATUS,' ') AS CASE_STATUS
				,COALESCE((SELECT
				a1.PARAMETER_NAME
				FROM
				ESERVICE_ADM.DBO.PARAMETER a1
				,ESERVICE_ADM.DBO.PARAMETER_CATEGORY b1
				WHERE
				a1.PARAMETER_CATEGORY_ID = b1.PARAMETER_CATEGORY_ID
				AND a1.STATUS = b1.STATUS
				AND b1.STATUS = 1
				AND b1.CATEGORY_CODE = 'MEDICAL_INTERFACE_STATUS'
				AND a1.PARAMETER_VALUE =CASE_STATUS),' ')  AS CASE_MESSAGE
				FROM ESERVICE.dbo.[NOTIFY_OF_NEW_CASE_MEDICAL]
			WHERE 1=1
			<if test="notifyVo.caseId != '' and notifyVo.caseId != null">
				AND CASE_ID = #{notifyVo.caseId}
			</if>
			<if test="notifyVo.ncStatus != '' and notifyVo.ncStatus != null">
				AND NC_STATUS = #{unionCourseVo.ncStatus}
			</if>
			<if test="notifyVo.createDate != null and  notifyVo.createDate != '' ">
				AND convert(varchar(10), STATUS_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{notifyVo.createDate}, 120)
			</if>
			<if test="notifyVo.completeDate != null and notifyVo.completeDate !='' ">
				AND convert(varchar(10), STATUS_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{notifyVo.completeDate}, 120)
			</if>
			ORDER BY CASE_STATUS DESC

	</select>
	<insert id="addMedicalTreatmentClaim" parameterType="com.twfhclife.adm.model.TransMedicalTreatmentClaimVo" >
		INSERT INTO
		ESERVICE.DBO.MEDICAL_TREATMENT_CLAIM
		(
		<include refid="Base_Medical_Column_List" />
		)
		VALUES
		(
		<choose>
			<when test="vo.claimSeqId!=null and vo.claimSeqId>0">
				#{vo.claimSeqId, jdbcType=FLOAT},
			</when>
			<otherwise>
				(NEXT VALUE for MEDICAL_TREATMENT_CLAIM_SEQ),
			</otherwise>
		</choose>
		#{vo.transNum,jdbcType=VARCHAR},
		#{vo.fileReceived,jdbcType=VARCHAR},
		#{vo.applyItem,jdbcType=VARCHAR},
		#{vo.policyNo,jdbcType=VARCHAR},

		#{vo.customerName,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.name,jdbcType=VARCHAR}),
		#{vo.relation,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.idNo,jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.birdate,jdbcType=VARCHAR}),

		#{vo.tel,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.phone,jdbcType=VARCHAR}),
		#{vo.zipCode,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.address,jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.mail,jdbcType=VARCHAR}),

		#{vo.diseaseName,jdbcType=VARCHAR},
		#{vo.diagnosisDate,jdbcType=VARCHAR},
		#{vo.hospital,jdbcType=VARCHAR},
		#{vo.otherCompanyInsured,jdbcType=VARCHAR},


		#{vo.otherInsuCompany,jdbcType=VARCHAR},
		#{vo.otherInsuType,jdbcType=VARCHAR},
		#{vo.otherInsuAmout,jdbcType=VARCHAR},
		#{vo.otherInsuClaim,jdbcType=VARCHAR},
		#{vo.paymentMethod,jdbcType=VARCHAR},

		#{vo.bankCode,jdbcType=VARCHAR},
		#{vo.branchCode,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.bankAccount,jdbcType=VARCHAR}),
		#{vo.accountName,jdbcType=VARCHAR},
		#{vo.applicationDate,jdbcType=VARCHAR},

		#{vo.applicationTime,jdbcType=VARCHAR},
		#{vo.applicationItem,jdbcType=VARCHAR},
		#{vo.job,jdbcType=VARCHAR},
		#{vo.jobDescr,jdbcType=VARCHAR},

		#{vo.accidentDate,jdbcType=VARCHAR},
		#{vo.accidentTime ,jdbcType=VARCHAR},
		#{vo.accidentCause,jdbcType=VARCHAR},
		#{vo.accidentLocation,jdbcType=VARCHAR},
		#{vo.accidentDescr,jdbcType=VARCHAR},


		#{vo.policeStation,jdbcType=VARCHAR},
		ESERVICE.DBO.FN_ENBASE64(#{vo.policeName,jdbcType=VARCHAR}),
		ESERVICE.DBO.FN_ENBASE64(#{vo.policePhone,jdbcType=VARCHAR}),
		#{vo.policeDate,jdbcType=VARCHAR},
		#{vo.policeTime,jdbcType=VARCHAR},


		#{vo.callPolice,jdbcType=VARCHAR},
		#{vo.sendAlliance ,jdbcType=VARCHAR},
		#{vo.from,jdbcType=VARCHAR},
		#{vo.to,jdbcType=VARCHAR},


		#{vo.authorizationFileType,jdbcType=VARCHAR},
		#{vo.authorizationStartDate,jdbcType=VARCHAR},
		#{vo.authorizationEndDate,jdbcType=VARCHAR},
		#{vo.toHospitalId,jdbcType=VARCHAR},
		#{vo.fromHospitalId,jdbcType=VARCHAR},

		#{vo.allianceStatus,jdbcType=VARCHAR},
		#{vo.hpUid,jdbcType=VARCHAR},
		#{vo.cpOa,jdbcType=VARCHAR}
		)
	</insert>
	
	<resultMap id="transDepositMap" type="com.twfhclife.adm.model.TransDepositDetailVo">
		<result column="POLICY_NO" property="policyNo" jdbcType="VARCHAR" />
		<result column="DEPOSIT_METHOD" property="depositMethod" jdbcType="VARCHAR" />
		<result column="PAYMENT_METHOD" property="paymentMethod" jdbcType="VARCHAR" />
		<result column="SWIFT_CODE" property="swiftCode" jdbcType="VARCHAR" />
		<result column="ENGLISH_NAME" property="englishName" jdbcType="VARCHAR" />
		<result column="BANK_CODE" property="bankCode" jdbcType="VARCHAR" />
		<result column="BANK_NAME" property="bankName" jdbcType="VARCHAR" />
		<result column="BRANCH_CODE" property="branchCode" jdbcType="VARCHAR" />
		<result column="BRANCH_NAME" property="branchName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
		<result column="BANK_ACCOUNT" property="bankAccount" jdbcType="VARCHAR" />
		<result column="ZIP_CODE" property="zipCode" jdbcType="VARCHAR" />
		<result column="ADDRESS" property="address" jdbcType="VARCHAR" />
		<result column="PRODUCT_NAME" property="productName" jdbcType="VARCHAR" />
		<result column="APPLY_ITEM" property="applyItem" jdbcType="VARCHAR" />
		<collection property="details" resultMap="detailMap"/>
	</resultMap>

	<resultMap id="detailMap" type="map">
		<result column="INVT_NO" property="invtNo" jdbcType="NVARCHAR" />
		<result column="AMOUNT" property="amount" jdbcType="NUMERIC" />
		<result column="RATIO" property="ratio" jdbcType="NUMERIC" />
		<result column="INVT_NAME" property="invtName" jdbcType="NVARCHAR" />
		<result column="CURRENCY" property="currency" jdbcType="NVARCHAR" />
	</resultMap>

	<select id="getAppliedTransDeposits" resultMap="transDepositMap">
		SELECT A.POLICY_NO, A.INVT_NO, A.AMOUNT
		, A.RATIO, A.DEPOSIT_METHOD, A.PAYMENT_METHOD, A.SWIFT_CODE
		, A.ENGLISH_NAME, A.BANK_CODE, A.BRANCH_CODE
		, A.ACCOUNT_NAME, A.BANK_ACCOUNT, A.ZIP_CODE, A.ADDRESS, A.BANK_NAME, A.BRANCH_NAME, A.CURRENCY
		, B.INVT_NAME,
		(
		SELECT TOP 1
		REPLACE(RTRIM(B.PRODUCT_NAME), '　', '')
		FROM
		ESERVICE.DBO.PRODUCT B
		WHERE (SELECT LIPM_INSU_BEG_DATE FROM ESERVICE.DBO.LILIPM WHERE LIPM_INSU_NO = A.POLICY_NO) BETWEEN DESI_SALE_DATE AND DESI_CHAN_VAR_DATE
		) AS PRODUCT_NAME,
		AI.APPLY_ITEM
		FROM ESERVICE.DBO.TRANS_DEPOSIT A LEFT JOIN ESERVICE.DBO.POLICY_PORTFOLIO B
		ON A.INVT_NO = B.INVT_NO AND A.POLICY_NO = B.POLICY_NO
		LEFT JOIN ESERVICE.DBO.TRANS_APPLY_ITEM AI ON A.TRANS_NUM = AI.TRANS_NUM
		WHERE A.TRANS_NUM = #{transNum}
	</select>

	<select id="getTransPaymentByTransNum" resultType="map">
		SELECT
		ID id, TRANS_NUM transNum, POLICY_NO policyNo, ALLOCATION allocation, PRE_ALLOCATION preAllocation,
		SWIFT_CODE swiftCode, ENGLISH_NAME englishName, ACCOUNT_NAME accountName, BANK_ACCOUNT bankAccount, BANK_NAME bankName, BRANCH_NAME branchName,
		ISNULL((
		SELECT TOP 1
		REPLACE(RTRIM(a.PRODUCT_NAME), '　', '')
		FROM
		ESERVICE.DBO.PRODUCT a
		WHERE (SELECT LIPM_INSU_BEG_DATE FROM ESERVICE.DBO.LILIPM WHERE LIPM_INSU_NO = P.POLICY_NO) BETWEEN DESI_SALE_DATE AND DESI_CHAN_VAR_DATE
		), '') AS productName
		from ESERVICE.DBO.TRANS_CASH_PAYMENT P
		where TRANS_NUM = #{transNum}
	</select>

	<select id="getTransChangePremium" resultType="map">
		SELECT
		ID, TRANS_NUM, AMOUNT, OLD_AMOUNT
		FROM
		ESERVICE.DBO.TRANS_CHANGE_PREMIUM
		WHERE TRANS_NUM = #{transNum}
	</select>
	<select id="getTransApplyItemByTransNum" resultType="java.lang.String">
		SELECT top 1 APPLY_ITEM  from
		[ESERVICE].[dbo].[TRANS_APPLY_ITEM]
		WHERE  TRANS_NUM=#{transNum} order BY [UPDATE_TIME] DESC
	</select>

	<sql id="optimizeINC1">
		SELECT
		T.TRANS_NUM
		,T.TRANS_DATE
		,T.TRANS_TYPE
		<!-- TODO 需要加入系統條件 -->
		,T.CREATE_DATE
		,U.ROC_ID
		,F.FROM_COMPANY_ID,
		T.STATUS
		FROM
		ESERVICE.DBO.TRANS T
		LEFT JOIN ESERVICE.DBO.USERS U ON T.USER_ID = U.USER_ID
		LEFT JOIN ESERVICE.DBO.TRANS_INSURANCE_CLAIM F ON T.TRANS_NUM = F.TRANS_NUM
		WHERE
		convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[>=]]> convert(varchar(10), #{transVo.startDate}, 120)
		AND convert(varchar(10), T.CREATE_DATE, 120) <![CDATA[<=]]> convert(varchar(10), #{transVo.endDate}, 120)
		<if test="transVo.transType != null and transVo.transType != ''" >
			AND T.TRANS_TYPE = #{transVo.transType}
		</if>
		<if test="transVo.policyNo != null and transVo.policyNo != ''" >
			<!-- 一筆序號可能會對應多筆保單號碼，join TRANS_POLICY 會造成序號資料會多筆顯示，所以查詢保單號碼需要單獨判斷 -->
			AND (
			SELECT
			COUNT(1)
			FROM ESERVICE.DBO.TRANS_POLICY TP
			WHERE
			TP.TRANS_NUM = T.TRANS_NUM
			AND TP.POLICY_NO = #{transVo.policyNo}) <![CDATA[>=]]> 1
		</if>
		<if test="transVo.status != null and transVo.status != ''" >
			AND T.STATUS = #{transVo.status}
		</if>
		<if test="transVo.policyHolderId != null and transVo.policyHolderId != ''" >
			AND U.ROC_ID = #{transVo.policyHolderId}
		</if>
		<if test="transVo.dataScope == '01'" >
			AND F.FROM_COMPANY_ID = 'L01'
		</if>
		<if test="transVo.dataScope == '02'" >
			AND F.FROM_COMPANY_ID != 'L01'
		</if>
		<if test="transVo.fileReceived != null and transVo.fileReceived != ''" >
			AND F.FILE_RECEIVED = #{transVo.fileReceived}
		</if>
		<if test="transVo.to != null and transVo.to != ''" >
			AND F.TO_COMPANY_ID is not null
		</if>
		<if test="transVo.sendToAlliance != null and transVo.sendToAlliance != ''" >
			AND F.SEND_ALLIANCE = #{transVo.sendToAlliance}
		</if>
		<if test="transVo.signAgree != null and transVo.signAgree != ''" >
			AND F.SIGN_AGREE = #{transVo.signAgree}
		</if>
	</sql>

	<resultMap id="MedicalInfoMap" type="com.twfhclife.adm.model.TransMedicalTreatmentClaimMedicalInfoVo">
		<result column="HS_TIME" property="hsTime"/>
		<result column="HE_TIME" property="heTime"/>
		<result column="OTYPE_NAME" property="otypeName"/>
		<result column="DEP_NAME" property="depName"/>
		<result column="SUB_DEP_NAME" property="subDepName"/>
		<association property="dtypeList" resultMap="DtypeMap"/>
	</resultMap>

	<resultMap id="DtypeMap" type="map">
		<result column="DTYPE_NAME" property="name"/>
		<result column="DTYPE" property="value"/>
		<result column="FILE_BASE64" property="fileBase64"/>
		<result column="FILE_NAME" property="fileName"/>
		<result column="FILE_ID" property="fileId"/>
	</resultMap>

	<select id="getMedicalInfoByClaimId" resultMap="MedicalInfoMap">
		select HS_TIME, HE_TIME, OTYPE_NAME, DEP_NAME, SUB_DEP_NAME, DTYPE_NAME, DTYPE, FILE_BASE64, FILE_NAME, FILE_ID FROM
		ESERVICE.dbo.TRANS_MEDICAL_TREATMENT_CLAIM_MEDICALINFO
		where CLAIMS_SEQ_ID = #{claimSeqId}
	</select>

	<!-- 取得線上申請資料-電子表單開通服務 -->
	<select id="getTransElectronicFormMethod" resultType="hashmap">
		SELECT TOP 1 
			E.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_ELECTRONIC_FORM E
			LEFT JOIN ESERVICE.DBO.TRANS T ON E.TRANS_NUM = T.TRANS_NUM
		WHERE
			E.TRANS_NUM = #{transVo.transNum}
	</select>
	
		<!-- 取得線上申請資料-減額繳清保險 -->
	<select id="getTransDeratePaidOffMethod" resultType="hashmap">
		SELECT TOP 1 
			DERATE.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_DERATE_PAID_OFF DERATE
			LEFT JOIN ESERVICE.DBO.TRANS T ON DERATE.TRANS_NUM = T.TRANS_NUM
		WHERE
			DERATE.TRANS_NUM = #{transVo.transNum}
	</select>
	
		<!-- 取得線上申請資料-展期定期保險 -->
	<select id="getTransRolloverPeriodicallyMethod" resultType="hashmap">
		SELECT TOP 1 
			ROLLOVER.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_ROLLOVER_PERIODICALLY ROLLOVER
			LEFT JOIN ESERVICE.DBO.TRANS T ON ROLLOVER.TRANS_NUM = T.TRANS_NUM
		WHERE
			ROLLOVER.TRANS_NUM = #{transVo.transNum}
	</select>
	
			<!-- 取得線上申請資料-契約撤銷 -->
	<select id="getTransContractRevocationMethod" resultType="hashmap">
		SELECT TOP 1 
			REVOCATION.*
			,<include refid="INC2" />
		FROM 
			ESERVICE.DBO.TRANS_CONTRACT_REVOCATION REVOCATION
			LEFT JOIN ESERVICE.DBO.TRANS T ON REVOCATION.TRANS_NUM = T.TRANS_NUM
		WHERE
			REVOCATION.TRANS_NUM = #{transVo.transNum}
	</select>

	<select id="getNewSignStatus" resultType="com.twfhclife.adm.model.SignRecord">
		SELECT TOP 1 SIGN_STATUS signStatus, ID_VERIFY_STATUS idVerifyStatus, SIGN_TIME signTime, ID_VERIFY_TIME idVerifyTime,
		SIGN_DOWNLOAD signDownload, SIGN_FILEID signFileId, ACTION_ID actionId
		FROM ESERVICE.DBO.BXCZ_SIGN_RECORD A
		INNER JOIN ESERVICE.DBO.TRANS B ON A.TRANS_NUM = B.TRANS_NUM AND B.STATUS NOT IN ('41', '42')
		WHERE A.TRANS_NUM = #{transNum}
		AND (ID_VERIFY_TIME IS NOT NULL OR SIGN_TIME IS NOT NULL) ORDER BY SIGN_TIME DESC, ID_VERIFY_TIME DESC
	</select>

	<select id="getSignFileByFileId" resultType="string">
		SELECT TOP 1 CONTENT_BASE64 FROM ESERVICE.DBO.BXCZ_SIGN_FILEDATA WHERE FILE_ID = #{signFileId}
	</select>

	<select id="getSignApiRecordByTransNum" resultType="com.twfhclife.adm.model.BxczSignApiLog">
		SELECT CALL_TYPE apiType, API_NAME apiName, ACTION_ID actionId, API_RESP_CODE apiRespCode, API_RESP_MSG apiRespMsg, CALL_START_TIME callStartTime,
		CALL_END_TIME callEndTime FROM ESERVICE.DBO.BXCZ_SIGN_API_LOG WHERE TRANS_NUM = #{transNum}
	</select>

	<update id="updatePolicyClaimApplyDate">
		UPDATE ESERVICE.DBO.TRANS_INSURANCE_CLAIM SET PRINT_DATE = #{date}
		WHERE FROM_COMPANY_ID != 'L01' AND TRANS_NUM = #{transNum}
		AND PRINT_DATE IS NULL
	</update>

	<update id="updateMedicalTreatmentApplyDate">
		UPDATE ESERVICE.DBO.TRANS_MEDICAL_TREATMENT_CLAIM SET PRINT_DATE = #{date}
		WHERE FROM_COMPANY_ID != 'L01' AND TRANS_NUM = #{transNum}
		AND PRINT_DATE IS NULL
	</update>

</mapper>

