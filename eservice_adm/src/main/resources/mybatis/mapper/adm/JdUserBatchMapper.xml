<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twfhclife.adm.dao.JdUserBatchDao">

    <sql id="Base_Column_List">
        USER_ID,USER_TYPE,ROC_ID,MOBILE,EMAIL,LOGIN_FAIL_COUNT,LAST_CHANG_PASSWORD_DATE,SMS_FLAG,MAIL_FLAG,FB_ID,MOICA_ID,CREATE_DATE,CREATE_USER
        ,ONLINE_FLAG,STATUS,USER_NAME ,LOGIN_TIME,CLAUSE_FLAG,SERIAL_NUM,IC_ID,LOGIN_SIZE,EFFECTIVE_DATE,EXPIRATION_DATE,INITPASSWORD
    </sql>

    <insert id="addUsers">
        insert ESERVICE_JD.dbo.USERS(
        <include refid="Base_Column_List"/>
        )
        values
        (
        #{jdUserVo.userId,jdbcType=VARCHAR},
        #{jdUserVo.userType,jdbcType=VARCHAR},
        ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.rocId,jdbcType=VARCHAR}),
        #{jdUserVo.mobile,jdbcType=VARCHAR},
        ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.email,jdbcType=VARCHAR}),
        #{jdUserVo.loginFailCount,jdbcType=VARCHAR},
        #{jdUserVo.lastChangPasswordDate,jdbcType=VARCHAR},
        #{jdUserVo.smsFlag,jdbcType=VARCHAR},
        #{jdUserVo.mailFlag,jdbcType=VARCHAR},
        #{jdUserVo.fbId,jdbcType=VARCHAR},
        #{jdUserVo.moicaId,jdbcType=VARCHAR},
        getdate(),
        #{jdUserVo.createUser,jdbcType=VARCHAR},
        #{jdUserVo.onlineFlag,jdbcType=VARCHAR},
        #{jdUserVo.status,jdbcType=VARCHAR},
        ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.userName,jdbcType=VARCHAR}),
        getdate(),
        #{jdUserVo.clauseFlag,jdbcType=VARCHAR},
        #{jdUserVo.serialNum,jdbcType=VARCHAR},
        #{jdUserVo.icId,jdbcType=VARCHAR},
        #{jdUserVo.loginSize,jdbcType=VARCHAR},
        #{jdUserVo.effectiveDate,jdbcType=VARCHAR},
        #{jdUserVo.expirationDate,jdbcType=VARCHAR},
        ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.initPassword,jdbcType=VARCHAR})
        );
    </insert>

    <update id="updateUsers">
        update ESERVICE_JD.dbo.USERS
        <set>
            <if test="jdUserVo.userId != null and jdUserVo.userId != ''"> USER_ID = #{jdUserVo.userId },</if>
            <if test="jdUserVo.userType != null and jdUserVo.userType != ''"> USER_TYPE = #{jdUserVo.userType },</if>
            <if test="jdUserVo.rocId != null and jdUserVo.rocId != ''"> ROC_ID = ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.rocId,jdbcType=VARCHAR}),,</if>
            <if test="jdUserVo.mobile != null and jdUserVo.mobile != ''"> MOBILE = #{jdUserVo.mobile },</if>
            <if test="jdUserVo.email != null and jdUserVo.email != ''"> EMAIL =ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.email,jdbcType=VARCHAR}),</if>
            <if test="jdUserVo.loginFailCount != null and jdUserVo.loginFailCount != ''"> LOGIN_FAIL_COUNT = #{jdUserVo.loginFailCount },</if>
            <if test="jdUserVo.lastChangPasswordDate != null and jdUserVo.lastChangPasswordDate != ''"> LAST_CHANG_PASSWORD_DATE = #{jdUserVo.lastChangPasswordDate },</if>
            <if test="jdUserVo.smsFlag != null and jdUserVo.smsFlag != ''"> SMS_FLAG = #{jdUserVo.smsFlag },</if>
            <if test="jdUserVo.mailFlag != null and jdUserVo.mailFlag != ''"> MAIL_FLAG = #{jdUserVo.mailFlag },</if>
            <if test="jdUserVo.fbId != null and jdUserVo.fbId != ''"> FB_ID = #{jdUserVo.fbId },</if>
            <if test="jdUserVo.moicaId != null and jdUserVo.moicaId != ''"> MOICA_ID = #{jdUserVo.moicaId },</if>
            <if test="jdUserVo.createUser != null and jdUserVo.createUser != ''"> CREATE_USER = #{jdUserVo.createUser },</if>
            <if test="jdUserVo.onlineFlag != null and jdUserVo.onlineFlag != ''"> ONLINE_FLAG = #{jdUserVo.onlineFlag },</if>
            <if test="jdUserVo.status != null and jdUserVo.status != ''"> STATUS = #{jdUserVo.status },</if>
            <if test="jdUserVo.userName != null and jdUserVo.userName != ''"> USER_NAME = ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.userName }),</if>
            <if test="jdUserVo.clauseFlag != null and jdUserVo.clauseFlag != ''"> CLAUSE_FLAG = #{jdUserVo.clauseFlag },</if>
            <if test="jdUserVo.serialNum != null and jdUserVo.serialNum != ''"> SERIAL_NUM = #{jdUserVo.serialNum },</if>
            <if test="jdUserVo.icId != null and jdUserVo.icId != ''"> IC_ID = #{jdUserVo.icId },</if>
            LOGIN_SIZE = #{jdUserVo.loginSize },
            <if test="jdUserVo.effectiveDate != null and jdUserVo.effectiveDate != ''"> EFFECTIVE_DATE = #{jdUserVo.effectiveDate },</if>
            <if test="jdUserVo.expirationDate != null and jdUserVo.expirationDate != ''"> EXPIRATION_DATE = #{jdUserVo.expirationDate },</if>
            <if test="jdUserVo.initPassword != null and jdUserVo.initPassword != ''">INITPASSWORD = ESERVICE.DBO.FN_ENBASE64(#{jdUserVo.initPassword,jdbcType=VARCHAR}),</if>
            LOGIN_TIME = getdate()
        </set>
        <where>
            <if test="jdUserVo.userId != null and jdUserVo.userId != ''"> USER_ID = #{jdUserVo.userId }</if>
        </where>

    </update>

    <delete id="deleteIC">
        delete ESERVICE_JD.dbo.USERS where USER_ID = #{jdUserVo.userId}
    </delete>

    <delete id="deleteUserIC">
        delete ESERVICE_JD.dbo.USER_IC where USER_ID = #{jdUserVo.userId}
    </delete>

    <select id="getJdUserQuery" resultType="hashmap">
        SELECT
            *
        FROM (
                 SELECT
                     ROW_NUMBER() OVER (ORDER BY USER_ID) AS ROW_NUM
        ,A.*
                 FROM (
                          select USER_ID,STATUS,EFFECTIVE_DATE,EXPIRATION_DATE,ESERVICE.DBO.FN_DEBASE64(USER_NAME) USER_NAME,IC_ID,LOGIN_SIZE,ESERVICE.DBO.FN_DEBASE64(ROC_ID) AS ROC_ID,ESERVICE.DBO.FN_DEBASE64(EMAIL) AS EMAIL,MOBILE
                          from ESERVICE_JD.dbo.USERS where USER_ID  = #{vo.userId}                      ) A
             ) B
        WHERE
            B.ROW_NUM <![CDATA[<=]]> #{vo.page} * #{vo.rows}
          AND B.ROW_NUM <![CDATA[>]]> (#{vo.page} - 1) * #{vo.rows}
    </select>

    <select id="countJdUser" resultType="int">
        SELECT
            COUNT(1) AS AMOUNT
        FROM (
                 select * from ESERVICE_JD.dbo.USERS where USER_ID  = #{vo.userId}
             ) t
    </select>

    <select id="getJdUserIcQuery" resultType="hashmap">
        SELECT
            *
        FROM (
                 SELECT
                     ROW_NUMBER() OVER (ORDER BY DEP_ID) AS ROW_NUM
        ,A.*
                 FROM (
                    SELECT DISTINCT D.BRANCH_ID DEP_ID, D.DEP_NAME depName, UD.BRANCH_ID, D1.DEP_NAME branchName FROM
                    ESERVICE_JD.DBO.USER_IC UD
                    INNER JOIN ESERVICE_JD.DBO.DEPARTMENT D ON D.DEP_ID = UD.DEP_ID COLLATE database_default
                    INNER JOIN ESERVICE_JD.DBO.DEPARTMENT D1 ON UD.DEP_ID = D1.PARENT_DEP AND UD.BRANCH_ID = D1.BRANCH_ID
                    WHERE UD.USER_ID = #{vo.userId} AND UD.BRANCH_ID IS NOT NULL
                    UNION
                    SELECT DISTINCT D.BRANCH_ID DEP_ID, D.DEP_NAME depName, '' BRANCH_ID, '' branchName FROM
                    ESERVICE_JD.DBO.USER_IC UD
                    INNER JOIN ESERVICE_JD.DBO.DEPARTMENT D ON D.DEP_ID = UD.DEP_ID COLLATE database_default
                    WHERE UD.USER_ID = #{vo.userId} AND UD.BRANCH_ID IS NULL
                      ) A
             ) B
        WHERE
            B.ROW_NUM <![CDATA[<=]]> #{vo.page} * #{vo.rows}
          AND B.ROW_NUM <![CDATA[>]]> (#{vo.page} - 1) * #{vo.rows}
    </select>

    <select id="countJdUserIc" resultType="int">
        SELECT
        COUNT(1) AS AMOUNT
        FROM (
           select * from ESERVICE_JD.dbo.USER_IC where USER_ID = #{vo.userId}
        ) t
    </select>
</mapper>